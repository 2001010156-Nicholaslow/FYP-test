[{"D:\\Github\\1\\FYP-test\\client\\src\\index.js":"1","D:\\Github\\1\\FYP-test\\client\\src\\JobListing.js":"2","D:\\Github\\1\\FYP-test\\client\\src\\Home.js":"3","D:\\Github\\1\\FYP-test\\client\\src\\reportWebVitals.js":"4","D:\\Github\\1\\FYP-test\\client\\src\\success.js":"5","D:\\Github\\1\\FYP-test\\client\\src\\App.js":"6","D:\\Github\\1\\FYP-test\\client\\src\\Profile.js":"7","D:\\Github\\1\\FYP-test\\client\\src\\Login\\Welcome2.js":"8","D:\\Github\\1\\FYP-test\\client\\src\\Login\\Login.js":"9","D:\\Github\\1\\FYP-test\\client\\src\\Login\\PartnerLogin.js":"10","D:\\Github\\1\\FYP-test\\client\\src\\Partner\\Partner.js":"11","D:\\Github\\1\\FYP-test\\client\\src\\Partner\\PartnerJobAd.js":"12","D:\\Github\\1\\FYP-test\\client\\src\\Partner\\PartnerProfile.js":"13","D:\\Github\\1\\FYP-test\\client\\src\\Register\\PartnerRegister.js":"14","D:\\Github\\1\\FYP-test\\client\\src\\Partner\\PartnerForm.js":"15","D:\\Github\\1\\FYP-test\\client\\src\\Register\\YouthRegister.js":"16","D:\\Github\\1\\FYP-test\\client\\src\\Partner\\PartnerUserSearch.js":"17","D:\\Github\\1\\FYP-test\\client\\src\\Partner\\PartnerFormEdit.js":"18","D:\\Github\\1\\FYP-test\\client\\src\\Partner\\PartnerStats.js":"19","D:\\Github\\1\\FYP-test\\client\\src\\Pages\\Login\\Login.js":"20","D:\\Github\\1\\FYP-test\\client\\src\\Pages\\Partners\\Partners.js":"21","D:\\Github\\1\\FYP-test\\client\\src\\Pages\\MainPage\\MainPage.js":"22","D:\\Github\\1\\FYP-test\\client\\src\\Pages\\Users\\Users.js":"23","D:\\Github\\1\\FYP-test\\client\\src\\Pages\\User\\User.js":"24","D:\\Github\\1\\FYP-test\\client\\src\\Pages\\Opportunities\\Opportunities.js":"25","D:\\Github\\1\\FYP-test\\client\\src\\Pages\\Reviews\\reviews.js":"26","D:\\Github\\1\\FYP-test\\client\\src\\Pages\\Stats\\Stats.js":"27","D:\\Github\\1\\FYP-test\\client\\src\\Partner\\PartnerHome.js":"28","D:\\Github\\1\\FYP-test\\client\\src\\Partner\\DeleteConfirmation.js":"29","D:\\Github\\1\\FYP-test\\client\\src\\Register\\YouthForm.js":"30","D:\\Github\\1\\FYP-test\\client\\src\\Components\\LineChart.js":"31","D:\\Github\\1\\FYP-test\\client\\src\\Data\\Data.js":"32","D:\\Github\\1\\FYP-test\\client\\src\\Components\\MaterialTablesIcons\\TablesIcons.js":"33","D:\\Github\\1\\FYP-test\\client\\src\\Register\\YouthDetails3.js":"34","D:\\Github\\1\\FYP-test\\client\\src\\Register\\Confirmation.js":"35","D:\\Github\\1\\FYP-test\\client\\src\\Register\\YouthDetails1.js":"36","D:\\Github\\1\\FYP-test\\client\\src\\Register\\YouthDetails2.js":"37"},{"size":3634,"mtime":1657541394680,"results":"38","hashOfConfig":"39"},{"size":209,"mtime":1656243911415,"results":"40","hashOfConfig":"39"},{"size":3810,"mtime":1656243911415,"results":"41","hashOfConfig":"39"},{"size":375,"mtime":1652457653847,"results":"42","hashOfConfig":"39"},{"size":952,"mtime":1656243911456,"results":"43","hashOfConfig":"39"},{"size":642,"mtime":1656243911414,"results":"44","hashOfConfig":"39"},{"size":199,"mtime":1652457653846,"results":"45","hashOfConfig":"39"},{"size":1529,"mtime":1656349451227,"results":"46","hashOfConfig":"39"},{"size":4394,"mtime":1657538666361,"results":"47","hashOfConfig":"39"},{"size":4115,"mtime":1657538666361,"results":"48","hashOfConfig":"39"},{"size":2722,"mtime":1657538666363,"results":"49","hashOfConfig":"39"},{"size":7384,"mtime":1657538666364,"results":"50","hashOfConfig":"39"},{"size":1599,"mtime":1657538666365,"results":"51","hashOfConfig":"39"},{"size":4934,"mtime":1656243911439,"results":"52","hashOfConfig":"39"},{"size":37131,"mtime":1656243911421,"results":"53","hashOfConfig":"39"},{"size":325,"mtime":1653170183178,"results":"54","hashOfConfig":"39"},{"size":1094,"mtime":1657538666366,"results":"55","hashOfConfig":"39"},{"size":36104,"mtime":1656243911421,"results":"56","hashOfConfig":"39"},{"size":1058,"mtime":1657538666365,"results":"57","hashOfConfig":"39"},{"size":2067,"mtime":1653238028310,"results":"58","hashOfConfig":"39"},{"size":3963,"mtime":1656434594004,"results":"59","hashOfConfig":"39"},{"size":743,"mtime":1656598982649,"results":"60","hashOfConfig":"39"},{"size":3811,"mtime":1656349533111,"results":"61","hashOfConfig":"39"},{"size":274,"mtime":1652463452425,"results":"62","hashOfConfig":"39"},{"size":3108,"mtime":1656345594478,"results":"63","hashOfConfig":"39"},{"size":2413,"mtime":1656435707162,"results":"64","hashOfConfig":"39"},{"size":852,"mtime":1657538666368,"results":"65","hashOfConfig":"39"},{"size":5450,"mtime":1657538666363,"results":"66","hashOfConfig":"39"},{"size":770,"mtime":1656243911418,"results":"67","hashOfConfig":"39"},{"size":2424,"mtime":1653305255925,"results":"68","hashOfConfig":"39"},{"size":179,"mtime":1657538666367,"results":"69","hashOfConfig":"39"},{"size":4,"mtime":1657538750868,"results":"70","hashOfConfig":"39"},{"size":2220,"mtime":1653297435249,"results":"71","hashOfConfig":"39"},{"size":4903,"mtime":1656243911441,"results":"72","hashOfConfig":"39"},{"size":2738,"mtime":1656243911438,"results":"73","hashOfConfig":"39"},{"size":4231,"mtime":1656243911439,"results":"74","hashOfConfig":"39"},{"size":4380,"mtime":1656243911440,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"byv2g2",{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"82"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"82"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"82"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"82"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"82"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"82"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"82"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"82"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"82"},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"82"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"82"},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"82"},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"D:\\Github\\1\\FYP-test\\client\\src\\index.js",["204","205"],[],"D:\\Github\\1\\FYP-test\\client\\src\\JobListing.js",[],[],[],"D:\\Github\\1\\FYP-test\\client\\src\\Home.js",[],[],"D:\\Github\\1\\FYP-test\\client\\src\\reportWebVitals.js",[],[],"D:\\Github\\1\\FYP-test\\client\\src\\success.js",[],[],"D:\\Github\\1\\FYP-test\\client\\src\\App.js",["206","207","208"],[],"import React from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { BrowserRouter as Router,Routes, Route, Link } from 'react-router-dom'; //dont remove router\r\n\r\n\r\n\r\nfunction App() {\r\n  \r\n  return (\r\n    <div>\r\n      <ul className=\"App\">\r\n        <li><Link to=\"/\">Home</Link></li>\r\n        <li><Link to=\"Login/login\">Login</Link></li>\r\n        <li><Link to=\"/Register/youthRegister\">Youth Register</Link></li>\r\n        <li><Link to=\"/Register/PartnerRegister\">Partner Register</Link></li>\r\n        <li><Link to=\"/profile\">My Profile</Link></li>\r\n      </ul>\r\n\r\n    </div>);\r\n}\r\n\r\n\r\nexport default App;\r\n","D:\\Github\\1\\FYP-test\\client\\src\\Profile.js",[],[],"D:\\Github\\1\\FYP-test\\client\\src\\Login\\Welcome2.js",["209"],[],"import React, {useEffect, useState} from 'react';\r\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\r\nimport { GrUserExpert } from \"react-icons/gr\";\r\nimport Axios from \"axios\";\r\nimport './Welcome.css';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\n//Partner\r\n\r\nconst Welcome2 = (req) => {\r\n\r\n  const params = useParams();\r\n  const user_id = params.ConfirmationCode\r\n  var decoded = jwt_decode(user_id);\r\n  const nav = useNavigate();\r\n  const [Navlink, SetNavlink] = useState(\"\");\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n  if(decoded.id){\r\n    const Pid = decoded.id\r\n   Axios.post(\"http://localhost:3001/PartnerEmailVerify\", {\r\n      Pid: Pid\r\n  })\r\n    SetNavlink(\"../Login/PartnerLogin\")\r\n\r\n  }else if (decoded.Uid) {\r\n    const Uid = decoded.id\r\n     Axios.post(\"http://localhost:3001/UserEmailVerify\", {\r\n      Uid: Uid\r\n  })\r\n    SetNavlink(\"../Login/Login\")\r\n  } else {\r\n    nav(\"../\")\r\n  }\r\n}, [])\r\n  \r\n  return (\r\n    <div className=\"container_welcome\">\r\n      <header className=\"jumbotron\">\r\n        <div className=\"icon_welcome\">\r\n        <h1 className=\"image_icon_welcome\"><GrUserExpert/></h1>\r\n        <h3><strong>Account Confirmed!</strong></h3>\r\n        <div className=\"welcome_text\">\r\n          <p1>Congratulations your account has been activated. Click the link below to login.</p1>\r\n          </div>\r\n        </div>\r\n        <Link to={Navlink} className=\"nav-link_welcome\"><button className='button_welcome'>Click here to login</button></Link>\r\n      </header>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Welcome2;","D:\\Github\\1\\FYP-test\\client\\src\\Login\\Login.js",["210"],[],"import React, { useEffect, useState } from 'react';\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport './YouthLogin.css';\r\nimport Axios from \"axios\";\r\nimport validator from \"validator\";\r\nimport { Form, Alert} from 'react-bootstrap';\r\n\r\nexport default function Login() {\r\n\r\n    const nav = useNavigate();\r\n    const [password, Setpassword] = useState(\"\");\r\n    const [email, Setemail] = useState(\"\");\r\n    const [LoginMSG, SetLoginMSG] = useState(\"\");\r\n    const [LoginStatus, SetLoginStatus] = useState(false);\r\n\r\n    var sess;\r\n    //module.exports = {sess};\r\n    Axios.defaults.withCredentials = true; //must be true\r\n\r\n    const login = () => {\r\n        if (\r\n            !validator.isEmpty(email) &\r\n            !validator.isEmpty(password)\r\n        ) {\r\n            Axios.post(\"http://localhost:3001/Useremailverifycheck\", {\r\n                email: email\r\n            }).then((res) => {\r\n                if (res.data.message) {\r\n                    SetLoginMSG(res.data.message)\r\n                    SetLoginStatus(true)\r\n                } else {\r\n                    Axios.post(\"http://localhost:3001/ClientLogin\", {\r\n                        email: email,\r\n                        password: password\r\n                    }).then((response) => {\r\n\r\n                        if (!response.data.auth) {\r\n                            SetLoginStatus(true)\r\n                            SetLoginMSG(\"Invalid Password/Email\")\r\n                        } else {\r\n                            localStorage.setItem(\"token\", response.data.token)\r\n                            sess = response.data.result[0]\r\n                            localStorage.setItem(\"Uid\", sess.user_id)\r\n                            nav(\"../\")\r\n\r\n\r\n\r\n                            //check auth\r\n                            Axios.get(\"http://localhost:3001/isAuth\", {\r\n                                headers: {\r\n                                    \"x-access-token\": localStorage.getItem(\"token\"),\r\n                                },\r\n                            }).then((response) => {\r\n                                console.log(response);\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            })\r\n        } else {\r\n\r\n            var required = document.querySelectorAll(\"input[required]\");\r\n\r\n            required.forEach(function (element) {\r\n                if (element.value.trim() === \"\") {\r\n                    element.style.borderColor = \"#f10\";\r\n                    SetLoginMSG(\"Invalid Password/Email\")\r\n                    SetLoginStatus(true)\r\n\r\n                } else {\r\n                    element.style.borderColor = \"white\";\r\n                }\r\n            });\r\n\r\n        }\r\n    };\r\n\r\n    /*const userAuthenticated = () => { //check for correct token\r\n        Axios.get(\"http://localhost:3001/isAuth\", {\r\n            headers: {\r\n                \"x-access-token\": localStorage.getItem(\"token\"),\r\n            },\r\n        }).then((response) => {\r\n            console.log(response);\r\n        });\r\n    }*/\r\n\r\n    useEffect(() => {\r\n        Axios.get(\"http://localhost:3001/loginSession\").then((response) => {\r\n            if (response.data.loggedIn == true) {\r\n                SetLoginStatus(false)\r\n            }\r\n        })\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className='container'>\r\n             {LoginStatus && <Alert variant=\"warning\" >{LoginMSG}</Alert>}\r\n            <div classname='login'>\r\n                <div className='header'>\r\n                    <h3 className='headertext'>Youth Login</h3>\r\n                    <p>Find the right job with us</p>\r\n                    <hr className='hr'></hr>\r\n                </div>\r\n                <Form>\r\n                    <input classname=\"login_box\" type=\"email\" onChange={(e) => { Setemail(e.target.value) }} placeholder=\"Email\" style={{ marginTop: 10 }} required />\r\n                    <br></br>\r\n                    <input type=\"password\" classname=\"login_box\" placeholder=\"Password\" onChange={(e) => { Setpassword(e.target.value) }} style={{ marginTop: 10 }} required />\r\n                    <br></br>\r\n                </Form>\r\n            </div>\r\n            <button type=\"submit\" onClick={login} style={{ marginTop: 20, marginBottom: 20, alignItems: 'center' }} >Login</button>\r\n            <Link to=\"../Register/YouthRegister\">Sign up here</Link>\r\n        </div>\r\n\r\n    );\r\n}","D:\\Github\\1\\FYP-test\\client\\src\\Login\\PartnerLogin.js",["211"],[],"import React, { useEffect, useState } from 'react';\r\nimport { Link , useNavigate} from \"react-router-dom\";\r\nimport './YouthLogin.css';\r\nimport Axios from \"axios\";\r\nimport validator from \"validator\";\r\nimport { Form, Alert} from 'react-bootstrap';\r\n\r\nfunction PartnerLogin() {\r\n    \r\n    const nav = useNavigate();\r\n    const [password, Setpassword] = useState(\"\");\r\n    const [email, Setemail] = useState(\"\");\r\n    const [LoginMSG, SetLoginMSG] = useState(\"\");\r\n    const [LoginStatus, SetLoginStatus] = useState(false);\r\n\r\n    Axios.defaults.withCredentials = true; //must be true\r\n\r\n    var sess;\r\n\r\n    const login = () => {\r\n        if (\r\n            !validator.isEmpty(email) &\r\n            !validator.isEmpty(password)\r\n        ) {\r\n            Axios.post(\"http://localhost:3001/Partneremailverifycheck\",{\r\n                email: email\r\n            }).then((res) => {\r\n                if(res.data.message){\r\n                        SetLoginMSG(res.data.message)\r\n                        SetLoginStatus(true)\r\n                }else{\r\n                    Axios.post(\"http://localhost:3001/PartnerLogin\", {\r\n                        email: email,\r\n                        password: password\r\n                    }).then((response) => {\r\n                        if (!response.data.auth) {\r\n                            SetLoginStatus(true)\r\n                            SetLoginMSG(\"Invalid Password/Email\")\r\n                        } else {\r\n                            localStorage.setItem(\"token\", response.data.token)\r\n                            sess = response.data.result[0]\r\n                            localStorage.setItem(\"user_id\", sess.partners_id)\r\n                            nav(\"../Partner/Partner\")\r\n        \r\n                            //check auth\r\n                            Axios.get(\"http://localhost:3001/isAuth\", {\r\n                                headers: {\r\n                                    \"x-access-token\": localStorage.getItem(\"token\"),\r\n                                },\r\n                            }).then((response) => {\r\n                                console.log(response);\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n\r\n        } else {\r\n\r\n            var required = document.querySelectorAll(\"input[required]\");\r\n\r\n            required.forEach(function (element) {\r\n                if (element.value.trim() === \"\") {\r\n                    element.style.borderColor = \"#f10\";\r\n                    SetLoginMSG(\"Invalid Password/Email\")\r\n                    SetLoginStatus(true)\r\n\r\n                } else {\r\n                    element.style.borderColor = \"white\";\r\n                }\r\n            });\r\n\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        Axios.get(\"http://localhost:3001/loginSession\").then((response) => {\r\n            if (response.data.loggedIn == true) {\r\n                SetLoginStatus(false)\r\n            }\r\n        })\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className='container'>\r\n            {LoginStatus && <Alert variant=\"warning\" >{LoginMSG}</Alert>}\r\n            <div classname='login'>\r\n                <div className='header'>\r\n                    <h3 className='headertext'>Partner Login</h3>\r\n                    <hr className='hr'></hr>\r\n                </div>\r\n                \r\n                <Form>\r\n                    <input classname=\"login_box\" type=\"email\" onChange={(e) => { Setemail(e.target.value) }} placeholder=\"Email\" style={{ marginTop: 10 }} required />\r\n                    <br></br>\r\n                    <input type=\"password\" classname=\"login_box\" placeholder=\"Password\" onChange={(e) => { Setpassword(e.target.value) }} style={{ marginTop: 10 }} required />\r\n                    <br></br>\r\n                </Form>\r\n            </div>\r\n            <button type=\"submit\" onClick={login} style={{ marginTop: 20, marginBottom: 20, alignItems: 'center' }} >Login</button>\r\n            <p>Want to be a Partner? <Link to=\"../Register/PartnerRegister\">Sign up here</Link></p>\r\n            \r\n        </div>\r\n\r\n    );\r\n}\r\nexport default PartnerLogin;","D:\\Github\\1\\FYP-test\\client\\src\\Partner\\Partner.js",["212","213","214","215","216","217"],[],"import React, { useState, useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { BiHome } from \"react-icons/bi\";\r\nimport Axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Nav, Navbar, NavDropdown } from 'react-bootstrap';\r\nimport PartnerHome from \"./PartnerHome\";\r\nimport './Partner.css';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nfunction Partner() {\r\n\r\n    const id = localStorage.getItem(\"user_id\");\r\n    const token = localStorage.getItem(\"token\");\r\n    const [msg, Setmsg] = useState(\"\");\r\n    const [AllowUser, SetAllowUser] = useState(false);\r\n\r\n    const nav = useNavigate();\r\n\r\n    const Exit = () => {\r\n        localStorage.clear()\r\n        sessionStorage.clear()\r\n        nav(\"../Login/PartnerLogin\")\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        var decoded = jwt_decode(token);\r\n\r\n        if (id == \"\" || token == \"\" || id == undefined || token == undefined) {\r\n            nav(\"../Login/PartnerLogin\")\r\n        } else {\r\n            if (decoded.id == id) {\r\n                SetAllowUser(true)\r\n                Axios.post(\"http://localhost:3001/LoginCheckPartner\", {\r\n                    user_id: id\r\n                }).then((response) => {\r\n                    Setmsg(response.data);\r\n                });\r\n            } else {\r\n                SetAllowUser(false)\r\n                localStorage.clear()\r\n                sessionStorage.clear()\r\n                nav(\"../Login/PartnerLogin\")\r\n            }\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            {AllowUser}\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n                <Nav.Link href=\"./Partner\">\r\n                    <div className=\"image_icon_nav\">\r\n                        <BiHome />\r\n                    </div>\r\n                </Nav.Link>\r\n                <Nav className=\"me-auto\">\r\n                    <Nav.Link href=\"./PartnerJobAd\">Job Ad</Nav.Link>\r\n                    <Nav.Link href=\"./PartnerUserSearch\">Search user</Nav.Link>\r\n                    <Nav.Link href=\"./PartnerStats\">Statics</Nav.Link>\r\n                </Nav>\r\n                <Navbar.Collapse className=\"justify-content-end\">\r\n                    <NavDropdown title={\"Sign in as : \" + msg} id=\"basic-nav-dropdown\">\r\n                        <NavDropdown.Item href=\"./PartnerProfile\">Edit profile</NavDropdown.Item>\r\n                        <NavDropdown.Divider />\r\n                        <NavDropdown.Item onClick={Exit}>Log Out</NavDropdown.Item>\r\n                    </NavDropdown>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n\r\n            <div className='Partner_Page'>\r\n\r\n                <PartnerHome />\r\n\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Partner;","D:\\Github\\1\\FYP-test\\client\\src\\Partner\\PartnerJobAd.js",["218","219","220","221","222","223","224","225","226","227"],[],"import React, { useEffect, useState } from 'react';\r\nimport Axios from \"axios\";\r\nimport { BiHome } from \"react-icons/bi\";\r\nimport DeleteConfirmation from \"./DeleteConfirmation\";\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { Alert, Nav, Navbar, NavDropdown } from 'react-bootstrap';\r\nimport './PartnerJobAd.css';\r\nimport jwt_decode from 'jwt-decode';\r\nfunction PartnerJobAd() {\r\n\r\n    const id = localStorage.getItem(\"user_id\");\r\n    const [msg, Setmsg] = useState(\"\");\r\n    const [JobNum, SetJobNum] = useState(\"\");\r\n    const [JobAds, SetJobAds] = useState([]);\r\n    const [AlertMSG, SetAlertMSG] = useState(\"\");\r\n    const [AlertMSGStatus, SetAlertMSGStatus] = useState(false);\r\n\r\n    const [deleteType, setdeleteType] = useState(\"\");\r\n    const [deleteID, setdeleteID] = useState(\"\");\r\n    const [displayConfirmationModal, setDisplayConfirmationModal] = useState(false);\r\n    const [deleteMessage, setDeleteMessage] = useState(null);\r\n\r\n    const token = localStorage.getItem(\"token\");\r\n    const [AllowUser, SetAllowUser] = useState(false);\r\n\r\n    const nav = useNavigate();\r\n\r\n    const Exit = () => {\r\n        localStorage.clear()\r\n        sessionStorage.clear()\r\n        nav(\"../Login/PartnerLogin\")\r\n    }\r\n\r\n    const showDeleteModal = (type, id) => {\r\n        setdeleteType(type);\r\n        setdeleteID(id);\r\n        setDeleteMessage('Are you sure you want to delete \"' + type + '\"?')\r\n        setDisplayConfirmationModal(true);\r\n    }\r\n\r\n    const hideConfirmationModal = () => {\r\n        setDisplayConfirmationModal(false);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        if (id == \"\" || token == \"\" || id == undefined || token == undefined) {\r\n            nav(\"../Login/PartnerLogin\")\r\n            window.location.reload();\r\n        } else {\r\n\r\n            var decoded = jwt_decode(token);\r\n\r\n            if (decoded.id == id) {\r\n                Axios.post(\"http://localhost:3001/LoginCheckPartner\", {\r\n                    user_id: id\r\n                }).then((response) => {\r\n                    Setmsg(response.data);\r\n                });\r\n            } else {\r\n                localStorage.clear()\r\n                sessionStorage.clear()\r\n                nav(\"../Login/PartnerLogin\")\r\n            }\r\n\r\n            Axios.post(\"http://localhost:3001/PartnerJobAdList\", {\r\n                user_id: id\r\n            }).then((response) => {\r\n                SetJobAds(response.data)\r\n            })\r\n\r\n            Axios.post(\"http://localhost:3001/CountPartnerJob\", {\r\n                user_id: id\r\n            }).then((response) => {\r\n                SetJobNum(response.data);\r\n            });\r\n        }\r\n\r\n    }, [])\r\n\r\n\r\n\r\n    const deleteValue = (opp_id) => {\r\n\r\n        Axios.delete(`http://localhost:3001/api/deleteListing/${opp_id}`).then((response) => {\r\n            if (response.data.message) {\r\n                Axios.post(\"http://localhost:3001/PartnerJobAdList\", {\r\n                    user_id: id\r\n                }).then((response) => {\r\n                    SetJobAds(response.data)\r\n                })\r\n                SetAlertMSG(response.data.message)\r\n                SetAlertMSGStatus(true)\r\n                setDeleteMessage('Successful!')\r\n                setDisplayConfirmationModal(false);\r\n\r\n            } else {\r\n                SetAlertMSG(\"Delete Fail, Please Try Again.\");\r\n            }\r\n\r\n        })\r\n\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Navbar bg=\"dark\" variant=\"dark\">\r\n                    <Nav.Link href=\"./Partner\">\r\n                        <div className=\"image_icon_nav\">\r\n                            <BiHome />\r\n                        </div>\r\n                    </Nav.Link>\r\n                    <Nav className=\"me-auto\">\r\n                        <Nav.Link href=\"./PartnerJobAd\">Job Ad</Nav.Link>\r\n                        <Nav.Link href=\"./PartnerUserSearch\">Search user</Nav.Link>\r\n                        <Nav.Link href=\"./PartnerStats\">Statics</Nav.Link>\r\n                    </Nav>\r\n                    <Navbar.Collapse className=\"justify-content-end\">\r\n                        <NavDropdown title={\"Sign in as : \" + msg} id=\"basic-nav-dropdown\">\r\n                            <NavDropdown.Item href=\"./PartnerProfile\">Edit profile</NavDropdown.Item>\r\n                            <NavDropdown.Divider />\r\n                            <NavDropdown.Item onClick={Exit}>Log Out</NavDropdown.Item>\r\n                        </NavDropdown>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </div>\r\n\r\n            <div className='JobAd'>\r\n                <div className='JobAd_panel'>\r\n                    <br></br>\r\n                    <div className='JobAd_body'>\r\n                        <Navbar className='JobAd_Nav'>\r\n                            <Navbar.Brand style={{ color: \"white\" }}>Job Listings</Navbar.Brand>\r\n\r\n                            <Navbar.Collapse className=\"justify-content-end\">\r\n                                <button><Nav.Link href=\"./PartnerJobAd\" style={{ color: \"black\" }}>Jobs listed ({JobNum})</Nav.Link></button>\r\n                                <button className='button_create'><Nav.Link href=\"./PartnerForm\" style={{ color: \"white\" }}>Create Job Ad</Nav.Link></button>\r\n                            </Navbar.Collapse>\r\n                        </Navbar>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n                {AlertMSGStatus && <Alert variant=\"success\">{AlertMSG}</Alert>}\r\n\r\n                <div>\r\n                    {JobAds.map((Joblist) => {\r\n                        const list = (\r\n\r\n                            <>\r\n                                <div className='JobAd_panel'>\r\n                                    <br></br>\r\n                                    <div className='JobAd_body'>\r\n                                        <div className='JobAd_Nav'>\r\n                                            <div className=\"Ad_detail\" key={Joblist.id}>\r\n                                                <Nav.Link href=\"\" style={{ color: \"black\", width: \"40%\" }}> <h4>{Joblist.name}</h4></Nav.Link>\r\n                                                <p className='Modified_AD_Text'>{Joblist.job_scope}</p>\r\n                                                <p className='Modified_AD'>Last Modified: {(Joblist.created_at).replace('T', ', ').slice(0, (Joblist.created_at).length - 7)}</p>\r\n\r\n                                                <button className='ADbutton_edit'><Link to=\"../Partner/PartnerFormEdit\" state={Joblist.opp_id}>Edit</Link></button>\r\n\r\n                                                <button className='ADbutton_delete' onClick={() => { showDeleteModal(Joblist.name, Joblist.opp_id) }}>Delete</button>\r\n\r\n                                                <DeleteConfirmation showModal={displayConfirmationModal} hideModal={hideConfirmationModal} confirmModal={deleteValue} type={Joblist.name} id={Joblist.opp_id} message={deleteMessage} />\r\n                                            </div>\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </>\r\n                        )\r\n                        return list\r\n                    }\r\n                    )}\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default PartnerJobAd;\r\n","D:\\Github\\1\\FYP-test\\client\\src\\Partner\\PartnerProfile.js",[],[],"D:\\Github\\1\\FYP-test\\client\\src\\Register\\PartnerRegister.js",[],[],"D:\\Github\\1\\FYP-test\\client\\src\\Partner\\PartnerForm.js",["228","229","230","231","232","233","234","235"],[],"import React, { Component, useEffect } from 'react';\r\nimport { BiHome, BiWindows } from \"react-icons/bi\";\r\nimport Searchable from 'react-searchable-dropdown';\r\nimport { Nav, Navbar, NavDropdown, Form, Button } from 'react-bootstrap';\r\nimport validator from \"validator\";\r\nimport './PartnerForm.css';\r\nimport Axios from \"axios\";\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nclass PartnerForm extends Component {\r\n\r\n    state = {\r\n        Uid: localStorage.getItem(\"user_id\"),\r\n        token: localStorage.getItem(\"token\"),\r\n        fullname: '', //from sql/sesisons\r\n        JobTitle: '',\r\n        position_level: '',\r\n        required_yrs: '', //requirements\r\n        job_scope: '', //highlights to be display on the front\r\n        job_specialization: '',\r\n        description: '',\r\n        location: '',\r\n        salary: '',\r\n        qualification: '',\r\n        additional_requirements: '',\r\n        Status: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.state.Uid == \"\" || this.state.token == \"\" || this.state.Uid == undefined || this.state.token == undefined) {\r\n            window.location.replace(\"../Login/PartnerLogin\");\r\n        } else {\r\n            var decoded = jwt_decode(this.state.token);\r\n            \r\n            if (decoded.id == this.state.Uid) {\r\n                Axios.post(\"http://localhost:3001/LoginCheckPartner\", {\r\n                    user_id: this.state.Uid\r\n                }).then((response) => {\r\n                    this.setState({ fullname: response.data })\r\n                })\r\n            }else {\r\n                window.location.replace(\"../Login/PartnerLogin\");\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        event.preventDefault();\r\n        this.setState({ [event.target.name]: event.target.value })\r\n    }\r\n\r\n    saveAndContinue = (e) => {\r\n        if (\r\n            !validator.isEmpty(this.state.JobTitle) &\r\n            !validator.isEmpty(this.state.position_level) &\r\n            !validator.isEmpty(this.state.required_yrs) &\r\n            !validator.isEmpty(this.state.job_scope) &\r\n            !validator.isEmpty(this.state.job_specialization) &\r\n            !validator.isEmpty(this.state.description) &\r\n            !validator.isEmpty(this.state.location) &\r\n            !validator.isEmpty(this.state.salary) &\r\n            !validator.isEmpty(this.state.qualification)\r\n        ) {\r\n            e.preventDefault()\r\n\r\n            Axios.post(\"http://localhost:3001/LoginCheckPartner\", {\r\n                user_id: this.state.Uid\r\n            }).then((response) => {\r\n                this.setState({ fullname: response.data })\r\n                Axios.post('http://localhost:3001/JobAddFormADD', this.state).then((Response) => {\r\n                }\r\n                )\r\n                window.location.replace(\"../Partner/PartnerJobAd\");\r\n            })\r\n\r\n        } else {\r\n            e.preventDefault()\r\n\r\n            this.setState({ Status: \"Error : Missing Fields!\" })\r\n            var required = document.querySelectorAll(\"input[required]\");\r\n\r\n            required.forEach(function (element) {\r\n                if (element.value.trim() === \"\") {\r\n                    element.style.backgroundColor = \"#ffcccb\";\r\n                } else {\r\n                    element.style.backgroundColor = \"white\";\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        const { Uid, fullname, JobTitle, position_level, required_yrs, job_scope, job_specialization, description, location, salary, qualification, additional_requirements, Status } = this.state\r\n\r\n\r\n        return (\r\n            <div className='Container'>\r\n                <div className='form_navbar'>\r\n                    <Navbar bg=\"dark\" variant=\"dark\">\r\n                        <Nav.Link href=\"./Partner\">\r\n                            <div className=\"image_icon_nav\">\r\n                                <BiHome />\r\n                            </div>\r\n                        </Nav.Link>\r\n                        <Nav className=\"me-auto\">\r\n                            <Nav.Link href=\"./PartnerJobAd\">Job Ad</Nav.Link>\r\n                            <Nav.Link href=\"./PartnerUserSearch\">Search user</Nav.Link>\r\n                            <Nav.Link href=\"./PartnerStats\">Statics</Nav.Link>\r\n                        </Nav>\r\n                        <Navbar.Collapse className=\"justify-content-end\">\r\n                            <NavDropdown title={\"Sign in as : \" + fullname} id=\"basic-nav-dropdown\">\r\n                                <NavDropdown.Item href=\"./PartnerProfile\">Edit profile</NavDropdown.Item>\r\n                                <NavDropdown.Divider />\r\n                                <NavDropdown.Item href=\"#action/3.4\">Log out</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                        </Navbar.Collapse>\r\n                    </Navbar>\r\n                </div>\r\n\r\n                <div className='form_partner'>\r\n\r\n\r\n                    <h2>Job Ad details</h2>\r\n                    <Form>\r\n                        <Form.Group controlId=\"JobTitle\" style={{ marginTop: 30 }} >\r\n                            <Form.Label className=\"label\">Job Title</Form.Label>\r\n                            <Form.Control\r\n                                style={{ width: 380, color: \"black\" }}\r\n                                type=\"text\"\r\n                                value={JobTitle}\r\n                                name=\"JobTitle\"\r\n                                required\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"position_level\" style={{ marginTop: 20 }}>\r\n                            <Form.Label>Position Level</Form.Label>\r\n                            <Form.Control className=\"dropdown_box\" as=\"select\" name=\"position_level\" defaultValue={position_level} onChange={this.handleChange} required>\r\n                                <option selected disabled value=\"\">Please select a option</option>\r\n                                <option value=\"Full Time\">Full Time</option>\r\n                                <option value=\"Part Time\">Part Time</option>\r\n                                <option value=\"Contract\">Contract</option>\r\n                                <option value=\"Temporary\">Temporary</option>\r\n                                <option value=\"Internship\">Internship</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"required_yrs\" style={{ marginTop: 20 }}>\r\n                            <Form.Label>Required Years of Experience</Form.Label>\r\n                            <Form.Control className=\"dropdown_box\" as=\"select\" name=\"required_yrs\" defaultValue={required_yrs} onChange={this.handleChange} required>\r\n                                <option selected disabled value=\"\">Please select a option</option>\r\n                                <option value=\"None\">None</option>\r\n                                <option value=\"1\">1</option>\r\n                                <option value=\"2\">2</option>\r\n                                <option value=\"3\">3</option>\r\n                                <option value=\"4\">4</option>\r\n                                <option value=\"5\">5</option>\r\n                                <option value=\"6\">6</option>\r\n                                <option value=\"7\">7</option>\r\n                                <option value=\"8\">8</option>\r\n                                <option value=\"9\">9</option>\r\n                                <option value=\"10\">10</option>\r\n                                <option value=\"10+\">10+</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"job_scope\" style={{ marginTop: 20 }} >\r\n                            <Form.Label className=\"job_scope\">Job Highlights</Form.Label>\r\n                            <Form.Control\r\n                                style={{ width: 380, color: \"black\", height: 100 }}\r\n                                value={job_scope}\r\n                                maxlength=\"250\"\r\n                                name=\"job_scope\"\r\n                                required\r\n                                autoComplete='off'\r\n                                as=\"textarea\"\r\n                                rows={3}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <small id=\"passwordHelpInline\" class=\"text-muted\">\r\n                                A short summary of the job. Maximum 250 characters.\r\n                            </small>\r\n\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"job_specialization\" style={{ marginTop: 20 }}>\r\n                            <Form.Label>Related Industry</Form.Label>\r\n                            <Searchable\r\n                                value={job_specialization}\r\n                                placeholder=\"Search for job specialization\" // by default \"Search\"\r\n                                notFoundText=\"No result found\" // by default \"No result found\"\r\n                                required\r\n                                options={[{\r\n                                    value: 'All Job Specialization',\r\n                                    label: 'All Job Specialization'\r\n                                }, {\r\n                                    value: 'Accounting/Finance',\r\n                                    label: 'Accounting/Finance'\r\n                                }, {\r\n                                    value: 'Agriculture',\r\n                                    label: 'Agriculture'\r\n                                }, {\r\n                                    value: 'Sales/Marketing',\r\n                                    label: 'Sales/Marketing'\r\n                                }, {\r\n                                    value: 'Chemistry',\r\n                                    label: 'Chemistry'\r\n                                }, {\r\n                                    value: 'Food/Delivery Service',\r\n                                    label: 'Food/Delivery Service'\r\n                                }, {\r\n                                    value: 'Sales/Retail/Marketing',\r\n                                    label: 'Sales/Retail/Marketing'\r\n                                }, {\r\n                                    value: 'Education/Training',\r\n                                    label: 'Education/Training'\r\n                                }, {\r\n                                    value: 'Health Care/Nursing',\r\n                                    label: 'Health Care/Nursing'\r\n                                }, {\r\n                                    value: 'Tourism/Hotel',\r\n                                    label: 'Tourism/Hotel'\r\n                                }, {\r\n                                    value: 'Building/Construction',\r\n                                    label: 'Building/Construction'\r\n                                }, {\r\n                                    value: 'Mechanical and electrical engineering',\r\n                                    label: 'Mechanical and electrical engineering'\r\n                                }, {\r\n                                    value: 'Media',\r\n                                    label: 'Media'\r\n                                }, {\r\n                                    value: 'Public service',\r\n                                    label: 'Public service'\r\n                                }, {\r\n                                    value: 'IT/Technology',\r\n                                    label: 'IT/Technology'\r\n                                }, {\r\n                                    value: 'Call centres/Telemarketing',\r\n                                    label: 'Call centres/Telemarketing'\r\n                                }, {\r\n                                    value: 'Security',\r\n                                    label: 'Security'\r\n                                }, {\r\n                                    value: 'Create/Design',\r\n                                    label: 'Create/Design'\r\n                                }, {\r\n                                    value: 'Warehouse & Logistics',\r\n                                    label: 'Warehouse & Logistics'\r\n                                }, {\r\n                                    value: 'Temporary/Events',\r\n                                    label: 'Temporary/Events'\r\n                                }, {\r\n                                    value: 'F&B',\r\n                                    label: 'F&B'\r\n                                }, {\r\n                                    value: 'Beauty & Wellness',\r\n                                    label: 'Beauty & Wellness'\r\n                                }, {\r\n                                    value: 'Customer Service/Design',\r\n                                    label: 'Customer Service/Design'\r\n                                }, {\r\n                                    value: 'Others',\r\n                                    label: 'Others'\r\n                                }\r\n                                ]}\r\n                                onSelect={value => {\r\n                                    this.setState({ job_specialization: value })\r\n                                }}\r\n                                listMaxHeight={140} //by default 140\r\n                            />\r\n\r\n\r\n\r\n                        </Form.Group>\r\n\r\n\r\n                        <Form.Group controlId=\"description\" style={{ marginTop: 20 }} >\r\n                            <Form.Label className=\"description\">Job Description</Form.Label>\r\n                            <Form.Control\r\n                                style={{ width: 380, color: \"black\", height: 100 }}\r\n                                value={description}\r\n                                name=\"description\"\r\n                                required\r\n                                autoComplete='off'\r\n                                as=\"textarea\"\r\n                                rows={8}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <small id=\"passwordHelpInline\" class=\"text-muted\">\r\n                                Please provide a detail Job Description. Include duites, <br></br> responsibilites and requirements.\r\n                            </small>\r\n                        </Form.Group>\r\n\r\n\r\n                        <Form.Group controlId=\"location\" style={{ marginTop: 20 }}>\r\n                            <Form.Label>Location</Form.Label>\r\n                            <Searchable\r\n                                value={location}\r\n                                placeholder=\"Search for the Nearest MRT\" // by default \"Search\"\r\n                                notFoundText=\"No result found\" // by default \"No result found\"\r\n                                required\r\n                                options={[{\r\n                                    value: 'Across Singapore',\r\n                                    label: 'Across Singapore'\r\n                                }, {\r\n                                    value: 'Jurong East',\r\n                                    label: 'Jurong East'\r\n                                }, {\r\n                                    value: 'Bukit Batok',\r\n                                    label: 'Bukit Batok'\r\n                                }, {\r\n                                    value: 'Choa Chu Kang',\r\n                                    label: 'Choa Chu Kang'\r\n                                }, {\r\n                                    value: 'Yew Tee',\r\n                                    label: 'Yew Tee'\r\n                                }, {\r\n                                    value: 'Kranji',\r\n                                    label: 'Kranji'\r\n                                }, {\r\n                                    value: 'Marsiling',\r\n                                    label: 'Marsiling'\r\n                                }, {\r\n                                    value: 'Admiralty',\r\n                                    label: 'Admiralty'\r\n                                }, {\r\n                                    value: 'Sembawang',\r\n                                    label: 'Sembawang'\r\n                                }, {\r\n                                    value: 'Yishun',\r\n                                    label: 'Yishun'\r\n                                }, {\r\n                                    value: 'Khatib',\r\n                                    label: 'Khatib'\r\n                                }, {\r\n                                    value: 'Yio Chu Kang',\r\n                                    label: 'Yio Chu Kang'\r\n                                }, {\r\n                                    value: 'Ang Mo Kio',\r\n                                    label: 'Ang Mo Kio'\r\n                                }, {\r\n                                    value: 'Bishan',\r\n                                    label: 'Bishan'\r\n                                }, {\r\n                                    value: 'Braddell',\r\n                                    label: 'Braddell'\r\n                                }, {\r\n                                    value: 'Novena',\r\n                                    label: 'Novena'\r\n                                }, {\r\n                                    value: 'Newton',\r\n                                    label: 'Newton'\r\n                                }, {\r\n                                    value: 'Orchard',\r\n                                    label: 'Orchard'\r\n                                }, {\r\n                                    value: 'Somerset',\r\n                                    label: 'Somerset'\r\n                                }, {\r\n                                    value: 'Dhoby Ghaut',\r\n                                    label: 'Dhoby Ghaut'\r\n                                }, {\r\n                                    value: 'City Hall',\r\n                                    label: 'City Hall'\r\n                                }, {\r\n                                    value: 'Raffles Place',\r\n                                    label: 'Raffles Place'\r\n                                }, {\r\n                                    value: 'Marina Bay',\r\n                                    label: 'Marina Bay'\r\n                                }, {\r\n                                    value: 'Marina South Pier',\r\n                                    label: 'Marina South Pier'\r\n                                }, {\r\n                                    value: 'Pasir Ris',\r\n                                    label: 'Pasir Ris'\r\n                                }, {\r\n                                    value: 'Tampines',\r\n                                    label: 'Tampines'\r\n                                }, {\r\n                                    value: 'Simei',\r\n                                    label: 'Simei'\r\n                                }, {\r\n                                    value: 'Tanah Merah',\r\n                                    label: 'Tanah Merah'\r\n                                }, {\r\n                                    value: 'Bedok',\r\n                                    label: 'Bedok'\r\n                                }, {\r\n                                    value: 'Kembangan',\r\n                                    label: 'Kembangan'\r\n                                }, {\r\n                                    value: 'Eunos',\r\n                                    label: 'Eunos'\r\n                                }, {\r\n                                    value: 'Paya Lebar',\r\n                                    label: 'Paya Lebar'\r\n                                }, {\r\n                                    value: 'Aljunied',\r\n                                    label: 'Aljunied'\r\n                                }, {\r\n                                    value: 'Kallang',\r\n                                    label: 'Kallang'\r\n                                }, {\r\n                                    value: 'Lavender',\r\n                                    label: 'Lavender'\r\n                                }, {\r\n                                    value: 'Bugis',\r\n                                    label: 'Bugis'\r\n                                }, {\r\n                                    value: 'City Hall',\r\n                                    label: 'City Hall'\r\n                                }, {\r\n                                    value: 'Raffles Place',\r\n                                    label: 'Raffles Place'\r\n                                }, {\r\n                                    value: 'Tanjong Pagar',\r\n                                    label: 'Tanjong Pagar'\r\n                                }, {\r\n                                    value: 'Outram Park',\r\n                                    label: 'Outram Park'\r\n                                }, {\r\n                                    value: 'Tiong Bahru',\r\n                                    label: 'Tiong Bahru'\r\n                                }, {\r\n                                    value: 'Redhill',\r\n                                    label: 'Redhill'\r\n                                }, {\r\n                                    value: 'Queenstown',\r\n                                    label: 'Queenstown'\r\n                                }, {\r\n                                    value: 'Commonwealth',\r\n                                    label: 'Commonwealth'\r\n                                }, {\r\n                                    value: 'Buona Vista',\r\n                                    label: 'Buona Vista'\r\n                                }, {\r\n                                    value: 'Dover',\r\n                                    label: 'Dover'\r\n                                }, {\r\n                                    value: 'Clementi',\r\n                                    label: 'Clementi'\r\n                                }, {\r\n                                    value: 'Chinese Garden',\r\n                                    label: 'Chinese Garden'\r\n                                }, {\r\n                                    value: 'Lakeside',\r\n                                    label: 'Lakeside'\r\n                                }, {\r\n                                    value: 'Boon Lay',\r\n                                    label: 'Boon Lay'\r\n                                }, {\r\n                                    value: 'Pioneer',\r\n                                    label: 'Pioneer'\r\n                                }, {\r\n                                    value: 'Joo Koon',\r\n                                    label: 'Joo Koon'\r\n                                }, {\r\n                                    value: 'Gul Circle',\r\n                                    label: 'Gul Circle'\r\n                                }, {\r\n                                    value: 'Tuas Crescent',\r\n                                    label: 'Tuas Crescent'\r\n                                }, {\r\n                                    value: 'Tuas West Road',\r\n                                    label: 'Tuas West Road'\r\n                                }, {\r\n                                    value: 'Tuas Link',\r\n                                    label: 'Tuas Link'\r\n                                }, {\r\n                                    value: 'Expo',\r\n                                    label: 'Expo'\r\n                                }, {\r\n                                    value: 'Changi Airport',\r\n                                    label: 'Changi Airport'\r\n                                }, {\r\n                                    value: 'HarbourFront',\r\n                                    label: 'HarbourFront'\r\n                                }, {\r\n                                    value: 'Chinatown',\r\n                                    label: 'Chinatown'\r\n                                }, {\r\n                                    value: 'Clarke Quay',\r\n                                    label: 'Clarke Quay'\r\n                                }, {\r\n                                    value: 'Little India',\r\n                                    label: 'Little India'\r\n                                }, {\r\n                                    value: 'Farrer Park',\r\n                                    label: 'Farrer Park'\r\n                                }, {\r\n                                    value: 'Boon Keng',\r\n                                    label: 'Boon Keng'\r\n                                }, {\r\n                                    value: 'Potong Pasir',\r\n                                    label: 'Potong Pasir'\r\n                                }, {\r\n                                    value: 'Woodleigh',\r\n                                    label: 'Woodleigh'\r\n                                }, {\r\n                                    value: 'Serangoon',\r\n                                    label: 'Serangoon'\r\n                                }, {\r\n                                    value: 'Kovan',\r\n                                    label: 'Kovan'\r\n                                }, {\r\n                                    value: 'Hougang',\r\n                                    label: 'Hougang'\r\n                                }, {\r\n                                    value: 'Buangkok',\r\n                                    label: 'Buangkok'\r\n                                }, {\r\n                                    value: 'Sengkang',\r\n                                    label: 'Sengkang'\r\n                                }, {\r\n                                    value: 'Punggol',\r\n                                    label: 'Punggol'\r\n                                }, {\r\n                                    value: 'Bras Basah',\r\n                                    label: 'Bras Basah'\r\n                                }, {\r\n                                    value: 'Esplanade',\r\n                                    label: 'Esplanade'\r\n                                }, {\r\n                                    value: 'Promenade',\r\n                                    label: 'Promenade'\r\n                                }, {\r\n                                    value: 'Nicoll Highway',\r\n                                    label: 'Nicoll Highway'\r\n                                }, {\r\n                                    value: 'Stadium',\r\n                                    label: 'Stadium'\r\n                                }, {\r\n                                    value: 'Mountbatten',\r\n                                    label: 'Mountbatten'\r\n                                }, {\r\n                                    value: 'Dakota',\r\n                                    label: 'Dakota'\r\n                                }, {\r\n                                    value: 'MacPherson',\r\n                                    label: 'MacPherson'\r\n                                }, {\r\n                                    value: 'Tai Seng',\r\n                                    label: 'Tai Seng'\r\n                                }, {\r\n                                    value: 'Bartley',\r\n                                    label: 'Bartley'\r\n                                }, {\r\n                                    value: 'Lorong Chuan',\r\n                                    label: 'Lorong Chuan'\r\n                                }, {\r\n                                    value: 'Marymount',\r\n                                    label: 'Marymount'\r\n                                }, {\r\n                                    value: 'Caldecott',\r\n                                    label: 'Caldecott'\r\n                                }, {\r\n                                    value: 'Botanic Gardens',\r\n                                    label: 'Botanic Gardens'\r\n                                }, {\r\n                                    value: 'Farrer Road\t',\r\n                                    label: 'Farrer Road\t'\r\n                                }, {\r\n                                    value: 'Holland Village',\r\n                                    label: 'Holland Village'\r\n                                }, {\r\n                                    value: 'one-north',\r\n                                    label: 'one-north'\r\n                                }, {\r\n                                    value: 'Kent Ridge',\r\n                                    label: 'Kent Ridge'\r\n                                }, {\r\n                                    value: 'Haw Par Villa',\r\n                                    label: 'Haw Par Villa'\r\n                                }, {\r\n                                    value: 'Pasir Panjang',\r\n                                    label: 'Pasir Panjang'\r\n                                }, {\r\n                                    value: 'Labrador Park',\r\n                                    label: 'Labrador Park'\r\n                                }, {\r\n                                    value: 'Telok Blangah',\r\n                                    label: 'Telok Blangah'\r\n                                }, {\r\n                                    value: 'Bayfront',\r\n                                    label: 'Bayfront'\r\n                                }, {\r\n                                    value: 'Bukit Panjang',\r\n                                    label: 'Bukit Panjang'\r\n                                }, {\r\n                                    value: 'Hillview',\r\n                                    label: 'Hillview'\r\n                                }, {\r\n                                    value: 'Beauty World',\r\n                                    label: 'Beauty World'\r\n                                }, {\r\n                                    value: 'King Albert Park',\r\n                                    label: 'King Albert Park'\r\n                                }, {\r\n                                    value: 'Sixth Avenue',\r\n                                    label: 'Sixth Avenue'\r\n                                }, {\r\n                                    value: 'Tan Kah Kee',\r\n                                    label: 'Tan Kah Kee'\r\n                                }, {\r\n                                    value: 'Stevens',\r\n                                    label: 'Stevens'\r\n                                }, {\r\n                                    value: 'Rochor',\r\n                                    label: 'Rochor'\r\n                                }, {\r\n                                    value: 'Downtown',\r\n                                    label: 'Downtown'\r\n                                }, {\r\n                                    value: 'Telok Ayer',\r\n                                    label: 'Telok Ayer'\r\n                                }, {\r\n                                    value: 'Fort Canning',\r\n                                    label: 'Fort Canning'\r\n                                }, {\r\n                                    value: 'Bencoolen',\r\n                                    label: 'Bencoolen'\r\n                                }, {\r\n                                    value: 'Jalan Besar',\r\n                                    label: 'Jalan Besar'\r\n                                }, {\r\n                                    value: 'Bendemeer',\r\n                                    label: 'Bendemeer'\r\n                                }, {\r\n                                    value: 'Geylang Bahru',\r\n                                    label: 'Geylang Bahru'\r\n                                }, {\r\n                                    value: 'Mattar',\r\n                                    label: 'Mattar'\r\n                                }, {\r\n                                    value: 'Ubi',\r\n                                    label: 'Ubi'\r\n                                }, {\r\n                                    value: 'Kaki Bukit',\r\n                                    label: 'Kaki Bukit'\r\n                                }, {\r\n                                    value: 'Bedok North',\r\n                                    label: 'Bedok North'\r\n                                }, {\r\n                                    value: 'Bedok Reservoir',\r\n                                    label: 'Bedok Reservoir'\r\n                                }, {\r\n                                    value: 'Tampines West',\r\n                                    label: 'Tampines West'\r\n                                }, {\r\n                                    value: 'Tampines East',\r\n                                    label: 'Tampines East'\r\n                                }, {\r\n                                    value: 'Upper Changi',\r\n                                    label: 'Upper Changi'\r\n                                }, {\r\n                                    value: 'Woodlands North',\r\n                                    label: 'Woodlands North'\r\n                                }, {\r\n                                    value: 'Woodlands South',\r\n                                    label: 'Woodlands South'\r\n                                }\r\n\r\n                                ]}\r\n                                onSelect={value => {\r\n                                    this.setState({ location: value })\r\n                                }}\r\n                                listMaxHeight={140} //by default 140\r\n                            />\r\n                            <small id=\"passwordHelpInline\" class=\"text-muted\">\r\n                                Choose the nearest MRT.\r\n                            </small>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"salary\" style={{ marginTop: 30 }} >\r\n                            <Form.Label className=\"salary\">Salary</Form.Label>\r\n                            <Form.Control\r\n                                style={{ width: 380, color: \"black\" }}\r\n                                type=\"number\"\r\n                                value={salary}\r\n                                name=\"salary\"\r\n                                pattern=\"[0-9]*\"\r\n                                required\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </Form.Group>\r\n\r\n\r\n                        <Form.Group controlId=\"qualification\" style={{ marginTop: 30 }}>\r\n                            <Form.Label>Required Qualifaction</Form.Label>\r\n                            <Form.Control className=\"dropdown_box\" as=\"select\" name=\"qualification\" defaultValue={qualification} onChange={this.handleChange} required>\r\n                                <option selected disabled value=\"\">Please select a option</option>\r\n                                <option value=\"None\">None</option>\r\n                                <option value=\"O-level\">GCE 'O' Level</option>\r\n                                <option value=\"N-level\">GCE 'N' Level</option>\r\n                                <option value=\"A-level\">GCE 'A' Level</option>\r\n                                <option value=\"Diploma\">Diploma/Degree</option>\r\n                                <option value=\"Bachelor\">Bachelor</option>\r\n                                <option value=\"Master\">Master</option>\r\n                                <option value=\"PhD\">PhD</option>\r\n                                <option value=\"Others\">Others</option>\r\n                            </Form.Control>\r\n\r\n                        </Form.Group>\r\n\r\n\r\n                        <Form.Group controlId=\"additional_requirements\" style={{ marginTop: 20 }} >\r\n                            <Form.Label className=\"additional_requirements\">Additional Requirements</Form.Label>\r\n                            <small id=\"passwordHelpInline\" className=\"optional_text\">\r\n                                Optional*\r\n                            </small>\r\n                            <Form.Control\r\n                                style={{ width: 380, color: \"black\", height: 100 }}\r\n                                value={additional_requirements}\r\n                                name=\"additional_requirements\"\r\n                                autoComplete='off'\r\n                                as=\"textarea\"\r\n                                rows={8}\r\n                                onChange={this.handleChange}\r\n                            />\r\n\r\n                        </Form.Group>\r\n\r\n                        <Button type=\"submit\" variant=\"primary\" onClick={this.saveAndContinue} style={{ marginTop: 25, marginLeft: 120 }}>Confirm</Button>\r\n                        <p style={{ marginTop: 30, color: 'red', textAlign: 'center' }}>{Status}</p>\r\n                    </Form>\r\n\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PartnerForm;","D:\\Github\\1\\FYP-test\\client\\src\\Register\\YouthRegister.js",[],[],"D:\\Github\\1\\FYP-test\\client\\src\\Partner\\PartnerUserSearch.js",[],[],"D:\\Github\\1\\FYP-test\\client\\src\\Partner\\PartnerFormEdit.js",["236","237","238","239","240","241","242"],[],"import React, { useEffect, useState } from 'react';\r\nimport { BiHome } from \"react-icons/bi\";\r\nimport Searchable from 'react-searchable-dropdown';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { Nav, Navbar, NavDropdown, Form, Button } from 'react-bootstrap';\r\nimport validator from \"validator\";\r\nimport './PartnerForm.css';\r\nimport Axios from \"axios\";\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nfunction PartnerFormEdit() {\r\n\r\n\r\n    const Dlocation = useLocation();\r\n    const opp_id = Dlocation.state;\r\n    const changeOpp_id = opp_id + '';\r\n\r\n    const Uid = localStorage.getItem(\"user_id\");\r\n    const token = localStorage.getItem(\"token\");\r\n    const [fullname, Setfullname] = useState(\"\");\r\n    const [JobTitle, SetJobTitle] = useState(\"\");\r\n    const [position_level, Setposition_level] = useState(\"\");\r\n    const [required_yrs, Setrequired_yrs] = useState(\"\");\r\n    const [job_scope, Setjob_scope] = useState(\"\");\r\n    const [job_specialization, Setjob_specialization] = useState(\"\");\r\n    const [description, Setdescription] = useState(\"\");\r\n    const [location, Setlocation] = useState(\"\");\r\n    const [salary, Setsalary] = useState(\"\");\r\n    const [qualification, Setqualification] = useState(\"\");\r\n    const [additional_requirements, Setadditional_requirements] = useState(\"\");\r\n    const [Status, SetStatus] = useState(\"\");\r\n    const nav = useNavigate();\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (Uid == \"\" || token == \"\" || Uid == undefined || token == undefined) {\r\n            nav(\"../Login/PartnerLogin\")\r\n            window.location.reload();\r\n        } else {\r\n\r\n            var decoded = jwt_decode(token);\r\n\r\n            if (decoded.id == Uid) {\r\n                Axios.post(\"http://localhost:3001/LoginCheckPartner\", {\r\n                    user_id: Uid\r\n                }).then((response) => {\r\n                    Setfullname(response.data)\r\n                })\r\n\r\n\r\n                Axios.post(\"http://localhost:3001/PartnerJobAdListUpdate\", {\r\n                    user_id: Uid,\r\n                    oid: opp_id\r\n                }).then((response) => {\r\n                    SetJobTitle(response.data[0].name)\r\n                    Setposition_level(response.data[0].position_level)\r\n                    Setrequired_yrs(response.data[0].required_yrs)\r\n                    Setjob_scope(response.data[0].job_scope)\r\n                    Setjob_specialization(response.data[0].industry)\r\n                    Setdescription(response.data[0].description)\r\n                    Setlocation(response.data[0].location)\r\n                    Setsalary(response.data[0].salary)\r\n                    Setqualification(response.data[0].qualification)\r\n                    Setadditional_requirements(response.data[0].additional_requirements)\r\n                })\r\n            } else {\r\n                nav(\"../Login/PartnerLogin\")\r\n                window.location.reload();\r\n            }\r\n        }\r\n    }, [])\r\n\r\n\r\n    const saveAndContinue = (e) => {\r\n\r\n        if (\r\n            !validator.isEmpty(Uid) &\r\n            opp_id !== null\r\n        ) {\r\n\r\n            if (\r\n                !validator.isEmpty(JobTitle) &\r\n                !validator.isEmpty(job_scope) &\r\n                !validator.isEmpty(description)\r\n            ) {\r\n                e.preventDefault()\r\n                Axios.post(\"http://localhost:3001/LoginCheckPartner\", {\r\n                    user_id: Uid\r\n                }).then((response) => {\r\n                    Setfullname(response)\r\n                    Axios.put(\"http://localhost:3001/JobAddFormUpdate\", {\r\n                        JobTitle: JobTitle,\r\n                        fullname: fullname,\r\n                        position_level: position_level,\r\n                        required_yrs: required_yrs,\r\n                        job_scope: job_scope,\r\n                        job_specialization: job_specialization,\r\n                        description: description,\r\n                        location: location,\r\n                        salary: salary,\r\n                        qualification: qualification,\r\n                        additional_requirements: additional_requirements,\r\n                        Uid: Uid,\r\n                        oid: opp_id\r\n                    })\r\n                    window.location.replace(\"../Partner/PartnerJobAd\");\r\n\r\n\r\n                })\r\n\r\n            } else {\r\n                e.preventDefault()\r\n                SetStatus(\"Error : Missing Fields\")\r\n                var required = document.querySelectorAll(\"input[required]\");\r\n\r\n                required.forEach(function (element) {\r\n                    if (element.value.trim() === \"\") {\r\n                        element.style.backgroundColor = \"#ffcccb\";\r\n                    } else {\r\n                        element.style.backgroundColor = \"white\";\r\n                    }\r\n                });\r\n\r\n            }\r\n        } else {\r\n            nav(\"../Partner/Partner\")\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className='Container'>\r\n            <div className='form_navbar'>\r\n                <Navbar bg=\"dark\" variant=\"dark\">\r\n                    <Nav.Link href=\"./Partner\">\r\n                        <div className=\"image_icon_nav\">\r\n                            <BiHome />\r\n                        </div>\r\n                    </Nav.Link>\r\n                    <Nav className=\"me-auto\">\r\n                        <Nav.Link href=\"./PartnerJobAd\">Job Ad</Nav.Link>\r\n                        <Nav.Link href=\"./PartnerUserSearch\">Search user</Nav.Link>\r\n                        <Nav.Link href=\"./PartnerStats\">Statics</Nav.Link>\r\n                    </Nav>\r\n                    <Navbar.Collapse className=\"justify-content-end\">\r\n                        <NavDropdown title={\"Sign in as : \" + fullname} id=\"basic-nav-dropdown\">\r\n                            <NavDropdown.Item href=\"./PartnerProfile\">Edit profile</NavDropdown.Item>\r\n                            <NavDropdown.Divider />\r\n                            <NavDropdown.Item href=\"#action/3.4\">Log out</NavDropdown.Item>\r\n                        </NavDropdown>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </div>\r\n\r\n            <div className='form_partner'>\r\n\r\n\r\n                <h2>Job Ad details</h2>\r\n                <Form>\r\n                    <Form.Group controlId=\"JobTitle\" style={{ marginTop: 30 }} >\r\n                        <Form.Label className=\"label\">Job Title</Form.Label>\r\n                        <Form.Control\r\n                            style={{ width: 380, color: \"black\" }}\r\n                            type=\"text\"\r\n                            value={JobTitle}\r\n                            name=\"JobTitle\"\r\n                            required\r\n                            onChange={(e) => { SetJobTitle(e.target.value) }}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"position_level\" style={{ marginTop: 20 }}>\r\n                        <Form.Label>Position Level</Form.Label>\r\n                        <Form.Control className=\"dropdown_box\" as=\"select\" name=\"position_level\" defaultValue={position_level} onChange={(e) => { Setposition_level(e.target.value) }} required>\r\n                            <option selected value={position_level}>{position_level}</option>\r\n                            <option value=\"Full Time\">Full Time</option>\r\n                            <option value=\"Part Time\">Part Time</option>\r\n                            <option value=\"Contract\">Contract</option>\r\n                            <option value=\"Temporary\">Temporary</option>\r\n                            <option value=\"Internship\">Internship</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"required_yrs\" style={{ marginTop: 20 }}>\r\n                        <Form.Label>Required Years of Experience</Form.Label>\r\n                        <Form.Control className=\"dropdown_box\" as=\"select\" name=\"required_yrs\" defaultValue={required_yrs} onChange={(e) => { Setrequired_yrs(e.target.value) }} required>\r\n                            <option selected value={required_yrs}>{required_yrs}</option>\r\n                            <option value=\"None\">None</option>\r\n                            <option value=\"1\">1</option>\r\n                            <option value=\"2\">2</option>\r\n                            <option value=\"3\">3</option>\r\n                            <option value=\"4\">4</option>\r\n                            <option value=\"5\">5</option>\r\n                            <option value=\"6\">6</option>\r\n                            <option value=\"7\">7</option>\r\n                            <option value=\"8\">8</option>\r\n                            <option value=\"9\">9</option>\r\n                            <option value=\"10\">10</option>\r\n                            <option value=\"10+\">10+</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"job_scope\" style={{ marginTop: 20 }} >\r\n                        <Form.Label className=\"job_scope\">Job Highlights</Form.Label>\r\n                        <Form.Control\r\n                            style={{ width: 380, color: \"black\", height: 100 }}\r\n                            value={job_scope}\r\n                            maxlength=\"250\"\r\n                            name=\"job_scope\"\r\n                            required\r\n                            autoComplete='off'\r\n                            as=\"textarea\"\r\n                            onChange={(e) => { Setjob_scope(e.target.value) }}\r\n                            rows={3}\r\n                        />\r\n                        <small id=\"passwordHelpInline\" class=\"text-muted\">\r\n                            A short summary of the job. Maximum 250 characters.\r\n                        </small>\r\n\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"job_specialization\" style={{ marginTop: 20 }}>\r\n                        <Form.Label>Related Industry</Form.Label>\r\n                        <Searchable\r\n                            value={job_specialization}\r\n                            placeholder={job_specialization} // by default \"Search\"\r\n                            notFoundText=\"No result found\" // by default \"No result found\"\r\n                            options={[{\r\n                                value: 'All Job Specialization',\r\n                                label: 'All Job Specialization'\r\n                            }, {\r\n                                value: 'Accounting/Finance',\r\n                                label: 'Accounting/Finance'\r\n                            }, {\r\n                                value: 'Agriculture',\r\n                                label: 'Agriculture'\r\n                            }, {\r\n                                value: 'Sales/Marketing',\r\n                                label: 'Sales/Marketing'\r\n                            }, {\r\n                                value: 'Chemistry',\r\n                                label: 'Chemistry'\r\n                            }, {\r\n                                value: 'Food/Delivery Service',\r\n                                label: 'Food/Delivery Service'\r\n                            }, {\r\n                                value: 'Sales/Retail/Marketing',\r\n                                label: 'Sales/Retail/Marketing'\r\n                            }, {\r\n                                value: 'Education/Training',\r\n                                label: 'Education/Training'\r\n                            }, {\r\n                                value: 'Health Care/Nursing',\r\n                                label: 'Health Care/Nursing'\r\n                            }, {\r\n                                value: 'Tourism/Hotel',\r\n                                label: 'Tourism/Hotel'\r\n                            }, {\r\n                                value: 'Building/Construction',\r\n                                label: 'Building/Construction'\r\n                            }, {\r\n                                value: 'Mechanical and electrical engineering',\r\n                                label: 'Mechanical and electrical engineering'\r\n                            }, {\r\n                                value: 'Media',\r\n                                label: 'Media'\r\n                            }, {\r\n                                value: 'Public service',\r\n                                label: 'Public service'\r\n                            }, {\r\n                                value: 'IT/Technology',\r\n                                label: 'IT/Technology'\r\n                            }, {\r\n                                value: 'Call centres/Telemarketing',\r\n                                label: 'Call centres/Telemarketing'\r\n                            }, {\r\n                                value: 'Security',\r\n                                label: 'Security'\r\n                            }, {\r\n                                value: 'Create/Design',\r\n                                label: 'Create/Design'\r\n                            }, {\r\n                                value: 'Warehouse & Logistics',\r\n                                label: 'Warehouse & Logistics'\r\n                            }, {\r\n                                value: 'Temporary/Events',\r\n                                label: 'Temporary/Events'\r\n                            }, {\r\n                                value: 'F&B',\r\n                                label: 'F&B'\r\n                            }, {\r\n                                value: 'Beauty & Wellness',\r\n                                label: 'Beauty & Wellness'\r\n                            }, {\r\n                                value: 'Customer Service/Design',\r\n                                label: 'Customer Service/Design'\r\n                            }, {\r\n                                value: 'Others',\r\n                                label: 'Others'\r\n                            }\r\n                            ]}\r\n                            onSelect={(e) => {\r\n                                Setjob_specialization(e)\r\n                            }}\r\n                            listMaxHeight={140} //by default 140\r\n                        />\r\n\r\n\r\n\r\n                    </Form.Group>\r\n\r\n\r\n                    <Form.Group controlId=\"description\" style={{ marginTop: 20 }} >\r\n                        <Form.Label className=\"description\">Job Description</Form.Label>\r\n                        <Form.Control\r\n                            style={{ width: 380, color: \"black\", height: 100 }}\r\n                            value={description}\r\n                            name=\"description\"\r\n                            required\r\n                            autoComplete='off'\r\n                            as=\"textarea\"\r\n                            rows={8}\r\n                            onChange={(e) => { Setdescription(e.target.value) }}\r\n                        />\r\n                        <small id=\"passwordHelpInline\" class=\"text-muted\">\r\n                            Please provide a detail Job Description. Include duites, <br></br> responsibilites and requirements.\r\n                        </small>\r\n                    </Form.Group>\r\n\r\n\r\n                    <Form.Group controlId=\"location\" style={{ marginTop: 20 }}>\r\n                        <Form.Label>Location</Form.Label>\r\n                        <Searchable\r\n                            value={location}\r\n                            placeholder={location} // by default \"Search\"\r\n                            notFoundText=\"No result found\" // by default \"No result found\"\r\n                            options={[{\r\n                                value: 'Across Singapore',\r\n                                label: 'Across Singapore'\r\n                            }, {\r\n                                value: 'Jurong East',\r\n                                label: 'Jurong East'\r\n                            }, {\r\n                                value: 'Bukit Batok',\r\n                                label: 'Bukit Batok'\r\n                            }, {\r\n                                value: 'Choa Chu Kang',\r\n                                label: 'Choa Chu Kang'\r\n                            }, {\r\n                                value: 'Yew Tee',\r\n                                label: 'Yew Tee'\r\n                            }, {\r\n                                value: 'Kranji',\r\n                                label: 'Kranji'\r\n                            }, {\r\n                                value: 'Marsiling',\r\n                                label: 'Marsiling'\r\n                            }, {\r\n                                value: 'Admiralty',\r\n                                label: 'Admiralty'\r\n                            }, {\r\n                                value: 'Sembawang',\r\n                                label: 'Sembawang'\r\n                            }, {\r\n                                value: 'Yishun',\r\n                                label: 'Yishun'\r\n                            }, {\r\n                                value: 'Khatib',\r\n                                label: 'Khatib'\r\n                            }, {\r\n                                value: 'Yio Chu Kang',\r\n                                label: 'Yio Chu Kang'\r\n                            }, {\r\n                                value: 'Ang Mo Kio',\r\n                                label: 'Ang Mo Kio'\r\n                            }, {\r\n                                value: 'Bishan',\r\n                                label: 'Bishan'\r\n                            }, {\r\n                                value: 'Braddell',\r\n                                label: 'Braddell'\r\n                            }, {\r\n                                value: 'Novena',\r\n                                label: 'Novena'\r\n                            }, {\r\n                                value: 'Newton',\r\n                                label: 'Newton'\r\n                            }, {\r\n                                value: 'Orchard',\r\n                                label: 'Orchard'\r\n                            }, {\r\n                                value: 'Somerset',\r\n                                label: 'Somerset'\r\n                            }, {\r\n                                value: 'Dhoby Ghaut',\r\n                                label: 'Dhoby Ghaut'\r\n                            }, {\r\n                                value: 'City Hall',\r\n                                label: 'City Hall'\r\n                            }, {\r\n                                value: 'Raffles Place',\r\n                                label: 'Raffles Place'\r\n                            }, {\r\n                                value: 'Marina Bay',\r\n                                label: 'Marina Bay'\r\n                            }, {\r\n                                value: 'Marina South Pier',\r\n                                label: 'Marina South Pier'\r\n                            }, {\r\n                                value: 'Pasir Ris',\r\n                                label: 'Pasir Ris'\r\n                            }, {\r\n                                value: 'Tampines',\r\n                                label: 'Tampines'\r\n                            }, {\r\n                                value: 'Simei',\r\n                                label: 'Simei'\r\n                            }, {\r\n                                value: 'Tanah Merah',\r\n                                label: 'Tanah Merah'\r\n                            }, {\r\n                                value: 'Bedok',\r\n                                label: 'Bedok'\r\n                            }, {\r\n                                value: 'Kembangan',\r\n                                label: 'Kembangan'\r\n                            }, {\r\n                                value: 'Eunos',\r\n                                label: 'Eunos'\r\n                            }, {\r\n                                value: 'Paya Lebar',\r\n                                label: 'Paya Lebar'\r\n                            }, {\r\n                                value: 'Aljunied',\r\n                                label: 'Aljunied'\r\n                            }, {\r\n                                value: 'Kallang',\r\n                                label: 'Kallang'\r\n                            }, {\r\n                                value: 'Lavender',\r\n                                label: 'Lavender'\r\n                            }, {\r\n                                value: 'Bugis',\r\n                                label: 'Bugis'\r\n                            }, {\r\n                                value: 'City Hall',\r\n                                label: 'City Hall'\r\n                            }, {\r\n                                value: 'Raffles Place',\r\n                                label: 'Raffles Place'\r\n                            }, {\r\n                                value: 'Tanjong Pagar',\r\n                                label: 'Tanjong Pagar'\r\n                            }, {\r\n                                value: 'Outram Park',\r\n                                label: 'Outram Park'\r\n                            }, {\r\n                                value: 'Tiong Bahru',\r\n                                label: 'Tiong Bahru'\r\n                            }, {\r\n                                value: 'Redhill',\r\n                                label: 'Redhill'\r\n                            }, {\r\n                                value: 'Queenstown',\r\n                                label: 'Queenstown'\r\n                            }, {\r\n                                value: 'Commonwealth',\r\n                                label: 'Commonwealth'\r\n                            }, {\r\n                                value: 'Buona Vista',\r\n                                label: 'Buona Vista'\r\n                            }, {\r\n                                value: 'Dover',\r\n                                label: 'Dover'\r\n                            }, {\r\n                                value: 'Clementi',\r\n                                label: 'Clementi'\r\n                            }, {\r\n                                value: 'Chinese Garden',\r\n                                label: 'Chinese Garden'\r\n                            }, {\r\n                                value: 'Lakeside',\r\n                                label: 'Lakeside'\r\n                            }, {\r\n                                value: 'Boon Lay',\r\n                                label: 'Boon Lay'\r\n                            }, {\r\n                                value: 'Pioneer',\r\n                                label: 'Pioneer'\r\n                            }, {\r\n                                value: 'Joo Koon',\r\n                                label: 'Joo Koon'\r\n                            }, {\r\n                                value: 'Gul Circle',\r\n                                label: 'Gul Circle'\r\n                            }, {\r\n                                value: 'Tuas Crescent',\r\n                                label: 'Tuas Crescent'\r\n                            }, {\r\n                                value: 'Tuas West Road',\r\n                                label: 'Tuas West Road'\r\n                            }, {\r\n                                value: 'Tuas Link',\r\n                                label: 'Tuas Link'\r\n                            }, {\r\n                                value: 'Expo',\r\n                                label: 'Expo'\r\n                            }, {\r\n                                value: 'Changi Airport',\r\n                                label: 'Changi Airport'\r\n                            }, {\r\n                                value: 'HarbourFront',\r\n                                label: 'HarbourFront'\r\n                            }, {\r\n                                value: 'Chinatown',\r\n                                label: 'Chinatown'\r\n                            }, {\r\n                                value: 'Clarke Quay',\r\n                                label: 'Clarke Quay'\r\n                            }, {\r\n                                value: 'Little India',\r\n                                label: 'Little India'\r\n                            }, {\r\n                                value: 'Farrer Park',\r\n                                label: 'Farrer Park'\r\n                            }, {\r\n                                value: 'Boon Keng',\r\n                                label: 'Boon Keng'\r\n                            }, {\r\n                                value: 'Potong Pasir',\r\n                                label: 'Potong Pasir'\r\n                            }, {\r\n                                value: 'Woodleigh',\r\n                                label: 'Woodleigh'\r\n                            }, {\r\n                                value: 'Serangoon',\r\n                                label: 'Serangoon'\r\n                            }, {\r\n                                value: 'Kovan',\r\n                                label: 'Kovan'\r\n                            }, {\r\n                                value: 'Hougang',\r\n                                label: 'Hougang'\r\n                            }, {\r\n                                value: 'Buangkok',\r\n                                label: 'Buangkok'\r\n                            }, {\r\n                                value: 'Sengkang',\r\n                                label: 'Sengkang'\r\n                            }, {\r\n                                value: 'Punggol',\r\n                                label: 'Punggol'\r\n                            }, {\r\n                                value: 'Bras Basah',\r\n                                label: 'Bras Basah'\r\n                            }, {\r\n                                value: 'Esplanade',\r\n                                label: 'Esplanade'\r\n                            }, {\r\n                                value: 'Promenade',\r\n                                label: 'Promenade'\r\n                            }, {\r\n                                value: 'Nicoll Highway',\r\n                                label: 'Nicoll Highway'\r\n                            }, {\r\n                                value: 'Stadium',\r\n                                label: 'Stadium'\r\n                            }, {\r\n                                value: 'Mountbatten',\r\n                                label: 'Mountbatten'\r\n                            }, {\r\n                                value: 'Dakota',\r\n                                label: 'Dakota'\r\n                            }, {\r\n                                value: 'MacPherson',\r\n                                label: 'MacPherson'\r\n                            }, {\r\n                                value: 'Tai Seng',\r\n                                label: 'Tai Seng'\r\n                            }, {\r\n                                value: 'Bartley',\r\n                                label: 'Bartley'\r\n                            }, {\r\n                                value: 'Lorong Chuan',\r\n                                label: 'Lorong Chuan'\r\n                            }, {\r\n                                value: 'Marymount',\r\n                                label: 'Marymount'\r\n                            }, {\r\n                                value: 'Caldecott',\r\n                                label: 'Caldecott'\r\n                            }, {\r\n                                value: 'Botanic Gardens',\r\n                                label: 'Botanic Gardens'\r\n                            }, {\r\n                                value: 'Farrer Road\t',\r\n                                label: 'Farrer Road\t'\r\n                            }, {\r\n                                value: 'Holland Village',\r\n                                label: 'Holland Village'\r\n                            }, {\r\n                                value: 'one-north',\r\n                                label: 'one-north'\r\n                            }, {\r\n                                value: 'Kent Ridge',\r\n                                label: 'Kent Ridge'\r\n                            }, {\r\n                                value: 'Haw Par Villa',\r\n                                label: 'Haw Par Villa'\r\n                            }, {\r\n                                value: 'Pasir Panjang',\r\n                                label: 'Pasir Panjang'\r\n                            }, {\r\n                                value: 'Labrador Park',\r\n                                label: 'Labrador Park'\r\n                            }, {\r\n                                value: 'Telok Blangah',\r\n                                label: 'Telok Blangah'\r\n                            }, {\r\n                                value: 'Bayfront',\r\n                                label: 'Bayfront'\r\n                            }, {\r\n                                value: 'Bukit Panjang',\r\n                                label: 'Bukit Panjang'\r\n                            }, {\r\n                                value: 'Hillview',\r\n                                label: 'Hillview'\r\n                            }, {\r\n                                value: 'Beauty World',\r\n                                label: 'Beauty World'\r\n                            }, {\r\n                                value: 'King Albert Park',\r\n                                label: 'King Albert Park'\r\n                            }, {\r\n                                value: 'Sixth Avenue',\r\n                                label: 'Sixth Avenue'\r\n                            }, {\r\n                                value: 'Tan Kah Kee',\r\n                                label: 'Tan Kah Kee'\r\n                            }, {\r\n                                value: 'Stevens',\r\n                                label: 'Stevens'\r\n                            }, {\r\n                                value: 'Rochor',\r\n                                label: 'Rochor'\r\n                            }, {\r\n                                value: 'Downtown',\r\n                                label: 'Downtown'\r\n                            }, {\r\n                                value: 'Telok Ayer',\r\n                                label: 'Telok Ayer'\r\n                            }, {\r\n                                value: 'Fort Canning',\r\n                                label: 'Fort Canning'\r\n                            }, {\r\n                                value: 'Bencoolen',\r\n                                label: 'Bencoolen'\r\n                            }, {\r\n                                value: 'Jalan Besar',\r\n                                label: 'Jalan Besar'\r\n                            }, {\r\n                                value: 'Bendemeer',\r\n                                label: 'Bendemeer'\r\n                            }, {\r\n                                value: 'Geylang Bahru',\r\n                                label: 'Geylang Bahru'\r\n                            }, {\r\n                                value: 'Mattar',\r\n                                label: 'Mattar'\r\n                            }, {\r\n                                value: 'Ubi',\r\n                                label: 'Ubi'\r\n                            }, {\r\n                                value: 'Kaki Bukit',\r\n                                label: 'Kaki Bukit'\r\n                            }, {\r\n                                value: 'Bedok North',\r\n                                label: 'Bedok North'\r\n                            }, {\r\n                                value: 'Bedok Reservoir',\r\n                                label: 'Bedok Reservoir'\r\n                            }, {\r\n                                value: 'Tampines West',\r\n                                label: 'Tampines West'\r\n                            }, {\r\n                                value: 'Tampines East',\r\n                                label: 'Tampines East'\r\n                            }, {\r\n                                value: 'Upper Changi',\r\n                                label: 'Upper Changi'\r\n                            }, {\r\n                                value: 'Woodlands North',\r\n                                label: 'Woodlands North'\r\n                            }, {\r\n                                value: 'Woodlands South',\r\n                                label: 'Woodlands South'\r\n                            }\r\n\r\n                            ]}\r\n                            onSelect={(e) => {\r\n                                Setlocation(e)\r\n                            }}\r\n\r\n                            listMaxHeight={140} //by default 140\r\n                        />\r\n                        <small id=\"passwordHelpInline\" class=\"text-muted\">\r\n                            Choose the nearest MRT.\r\n                        </small>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"salary\" style={{ marginTop: 30 }} >\r\n                        <Form.Label className=\"salary\">Salary</Form.Label>\r\n                        <Form.Control\r\n                            style={{ width: 380, color: \"black\" }}\r\n                            type=\"number\"\r\n                            value={salary}\r\n                            name=\"salary\"\r\n                            pattern=\"[0-9]*\"\r\n                            required\r\n                            onChange={(e) => { Setsalary(e.target.value + \"\") }}\r\n                        />\r\n                    </Form.Group>\r\n\r\n\r\n                    <Form.Group controlId=\"qualification\" style={{ marginTop: 30 }}>\r\n                        <Form.Label>Required Qualifaction</Form.Label>\r\n                        <Form.Control className=\"dropdown_box\" as=\"select\" name=\"qualification\" defaultValue={qualification} onChange={(e) => { Setqualification(e.target.value) }} required>\r\n                            <option selected value={qualification}>{qualification}</option>\r\n                            <option value=\"None\">None</option>\r\n                            <option value=\"O-level\">GCE 'O' Level</option>\r\n                            <option value=\"N-level\">GCE 'N' Level</option>\r\n                            <option value=\"A-level\">GCE 'A' Level</option>\r\n                            <option value=\"Diploma\">Diploma/Degree</option>\r\n                            <option value=\"Bachelor\">Bachelor</option>\r\n                            <option value=\"Master\">Master</option>\r\n                            <option value=\"PhD\">PhD</option>\r\n                            <option value=\"Others\">Others</option>\r\n                        </Form.Control>\r\n\r\n                    </Form.Group>\r\n\r\n\r\n                    <Form.Group controlId=\"additional_requirements\" style={{ marginTop: 20 }} >\r\n                        <Form.Label className=\"additional_requirements\">Additional Requirements</Form.Label>\r\n                        <small id=\"passwordHelpInline\" className=\"optional_text\">\r\n                            Optional*\r\n                        </small>\r\n                        <Form.Control\r\n                            style={{ width: 380, color: \"black\", height: 100 }}\r\n                            value={additional_requirements}\r\n                            name=\"additional_requirements\"\r\n                            autoComplete='off'\r\n                            as=\"textarea\"\r\n                            rows={8}\r\n                            onChange={(e) => { Setadditional_requirements(e.target.value) }}\r\n                        />\r\n\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" onClick={saveAndContinue} style={{ marginTop: 25, marginLeft: 120 }}>Confirm</Button>\r\n                    <p style={{ marginTop: 30, color: 'red', textAlign: 'center' }}>{Status}</p>\r\n                </Form>\r\n\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default PartnerFormEdit;","D:\\Github\\1\\FYP-test\\client\\src\\Partner\\PartnerStats.js",[],[],"D:\\Github\\1\\FYP-test\\client\\src\\Pages\\Login\\Login.js",["243","244","245","246"],[],"import React, { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./Login.css\";\r\nimport Axios from \"axios\";\r\nimport { decodeToken } from \"react-jwt\";\r\nexport default function Login() {\r\n  const [email, setEmail] = useState(\"Isaac@gmail.com\");\r\n  const [password, setPassword] = useState(\"password\");\r\n\r\n  function validateForm() {\r\n    return email.length > 0 && password.length > 0;\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    Axios.post(\"http://localhost:3001/login\", {\r\n      email: email,\r\n      password: password,\r\n    })\r\n      .then((response) => {\r\n        console.log(response.status);\r\n        if (response.status == 200) {\r\n          alert(\"Sign in sucessfully \");\r\n        }\r\n        localStorage.setItem(\"token\", response.data.token);\r\n        window.location.assign(\"/admin/mainpage\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        if (error.response.status == 401) {\r\n          alert(\"Wrong credentials\");\r\n        } else {\r\n          alert(\"Something went wrong\");\r\n        }\r\n      });\r\n    event.preventDefault();\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit} className=\"Form\">\r\n      <h1>Admin Panel</h1>\r\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n        <Form.Label>Email address</Form.Label>\r\n        <Form.Control\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          type=\"email\"\r\n          placeholder=\"Enter email\"\r\n          required\r\n        />\r\n        <Form.Text className=\"text-muted\"></Form.Text>\r\n      </Form.Group>\r\n\r\n      <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n        />\r\n      </Form.Group>\r\n      <Button variant=\"primary\" type=\"submit\">\r\n        Submit\r\n      </Button>\r\n    </Form>\r\n  );\r\n}\r\n","D:\\Github\\1\\FYP-test\\client\\src\\Pages\\Partners\\Partners.js",["247","248","249"],[],"import React, { useState, useEffect } from \"react\";\r\nimport TableIcons from \"../../Components/MaterialTablesIcons/TablesIcons\";\r\nimport MaterialTable from \"material-table\";\r\nimport Axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Partners() {\r\n  const [data, setData] = useState([]);\r\n  const [reload, setReload] = useState(false);\r\n\r\n  const verifyPartners = (partner_id) => {\r\n    console.log(partner_id);\r\n    Axios.put(\"http://localhost:3001/admin_verify_partner\", {\r\n      partner_id: partner_id,\r\n    }).then((response) => {\r\n      alert(\"Verified\");\r\n      setReload(!reload);\r\n    });\r\n  };\r\n\r\n  const updatepartners = (partners_id, contact_name, email, contact_number) => {\r\n    Axios.put(\"http://localhost:3001/admin_update_partner\", {\r\n      contact_name: contact_name,\r\n      contact_number: contact_number,\r\n      email: email,\r\n      partners_id: partners_id,\r\n    }).then((response) => {\r\n      alert(\"Updated\");\r\n      setReload(!reload);\r\n    });\r\n  };\r\n\r\n  const deletepartner = (partners_id) => {\r\n    Axios.put(\"http://localhost:3001/admin_delete_partner\", {\r\n      partners_id: partners_id,\r\n    }).then((response) => {\r\n      alert(\"Deleted\");\r\n      setReload(!reload);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3001/admin_get_partners\").then((response) => {\r\n      setData(response.data);\r\n    });\r\n  }, [reload]);\r\n\r\n  const [columns, setColumns] = useState([\r\n    { title: \"UEN\", field: \"UEN\", filtering: false, editable: \"never\" },\r\n    {\r\n      title: \"Company Name\",\r\n      field: \"company_name\",\r\n      editable: \"never\",\r\n    },\r\n    {\r\n      title: \"Contact Name\",\r\n      field: \"contact_name\",\r\n      filtering: false,\r\n    },\r\n    {\r\n      title: \"Contact Email\",\r\n      field: \"email\",\r\n      filtering: false,\r\n    },\r\n    {\r\n      title: \"Contact Number\",\r\n      field: \"contact_number\",\r\n      filtering: false,\r\n    },\r\n    {\r\n      title: \"Industry\",\r\n      field: \"company_industry\",\r\n      editable: \"never\",\r\n    },\r\n    {\r\n      title: \"Company Overview\",\r\n      field: \"company_overview\",\r\n      filtering: false,\r\n      editable: \"never\",\r\n    },\r\n    {\r\n      title: \"Status\",\r\n      field: \"verified\",\r\n      filtering: false,\r\n      lookup: { 0: \"Not Verified\", 1: \"Verified\" },\r\n      editable: \"never\",\r\n    },\r\n    {\r\n      title: \"Verify\",\r\n      field: \"partners_id\",\r\n      filtering: false,\r\n      editable: \"never\",\r\n\r\n      render: (rowData) => {\r\n        return (\r\n          <button\r\n            onClick={() => {\r\n              verifyPartners(rowData.partners_id);\r\n            }}\r\n          >\r\n            Verify\r\n          </button>\r\n        );\r\n      },\r\n    },\r\n  ]);\r\n\r\n  return (\r\n    <MaterialTable\r\n      icons={TableIcons}\r\n      title=\" Manage Partners\"\r\n      columns={columns}\r\n      data={data}\r\n      options={{\r\n        filtering: true,\r\n      }}\r\n      editable={{\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              const dataUpdate = [...data];\r\n              const index = oldData.tableData.id;\r\n              dataUpdate[index] = newData;\r\n\r\n              setData([...dataUpdate]);\r\n              updatepartners(\r\n                newData.partners_id,\r\n                newData.contact_name,\r\n                newData.email,\r\n                newData.contact_number\r\n              );\r\n              resolve();\r\n            }, 1000);\r\n          }),\r\n        onRowDelete: (oldData) =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              const dataDelete = [...data];\r\n              const index = oldData.tableData.id;\r\n              deletepartner(oldData.partners_id);\r\n              dataDelete.splice(index, 1);\r\n              setData([...dataDelete]);\r\n              resolve();\r\n            }, 1000);\r\n          }),\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Partners;\r\n","D:\\Github\\1\\FYP-test\\client\\src\\Pages\\MainPage\\MainPage.js",[],[],"D:\\Github\\1\\FYP-test\\client\\src\\Pages\\Users\\Users.js",["250","251"],[],"import React, { useState, useEffect } from \"react\";\r\nimport TableIcons from \"../../Components/MaterialTablesIcons/TablesIcons\";\r\nimport MaterialTable from \"material-table\";\r\nimport Axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nfunction Users() {\r\n  const navigate = useNavigate();\r\n  const [data, setData] = useState([]);\r\n  const [reload, setReload] = useState(false);\r\n\r\n  const updateusers = (\r\n    user_id,\r\n    full_name,\r\n    email,\r\n    education,\r\n    contact_number,\r\n    gender,\r\n    citizenship,\r\n    address,\r\n    postalcode,\r\n    country\r\n  ) => {\r\n    Axios.put(\"http://localhost:3001/admin_update_users\", {\r\n      user_id: user_id,\r\n      full_name: full_name,\r\n      email: email,\r\n      education: education,\r\n      contact_number: contact_number,\r\n      gender: gender,\r\n      citizenship: citizenship,\r\n      address: address,\r\n      postalcode: postalcode,\r\n      country: country,\r\n    }).then((response) => {\r\n      alert(\"Updated\");\r\n      setReload(!reload);\r\n    });\r\n  };\r\n\r\n  const deleteusers = (user_id) => {\r\n    Axios.put(\"http://localhost:3001/admin_delete_users\", {\r\n      user_id: user_id,\r\n    }).then((response) => {\r\n      alert(\"Deleted\");\r\n      setReload(!reload);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3001/admin_get_users\").then((response) => {\r\n      setData(response.data);\r\n    });\r\n  }, []);\r\n\r\n  const [columns, setColumns] = useState([\r\n    { title: \"Full Name\", field: \"full_name\", filtering: false },\r\n    {\r\n      title: \"Email\",\r\n      field: \"email\",\r\n      filtering: false,\r\n    },\r\n    {\r\n      title: \"Date of birth\",\r\n      field: \"dob\",\r\n      editable: \"never\",\r\n      filtering: false,\r\n      render: (rowData) => moment(rowData.dob).format(\"YYYY/MM/DD\"),\r\n    },\r\n    {\r\n      title: \"Education\",\r\n      field: \"education\",\r\n    },\r\n    {\r\n      title: \"Contact Number\",\r\n      field: \"contact_number\",\r\n      filtering: false,\r\n    },\r\n    {\r\n      title: \"Gender\",\r\n      field: \"gender\",\r\n    },\r\n    {\r\n      title: \"Citizenship\",\r\n      field: \"citizenship\",\r\n    },\r\n    {\r\n      title: \"Address\",\r\n      field: \"address\",\r\n      filtering: false,\r\n    },\r\n    {\r\n      title: \"Postal Code\",\r\n      field: \"postalcode\",\r\n      filtering: false,\r\n    },\r\n    {\r\n      title: \"Country\",\r\n      field: \"country\",\r\n    },\r\n  ]);\r\n\r\n  return (\r\n    <MaterialTable\r\n      icons={TableIcons}\r\n      title=\" Manage Users\"\r\n      columns={columns}\r\n      data={data}\r\n      options={{\r\n        filtering: true,\r\n      }}\r\n      editable={{\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              const dataUpdate = [...data];\r\n              const index = oldData.tableData.id;\r\n              dataUpdate[index] = newData;\r\n\r\n              setData([...dataUpdate]);\r\n              updateusers(\r\n                newData.user_id,\r\n                newData.full_name,\r\n                newData.email,\r\n                newData.education,\r\n                newData.contact_number,\r\n                newData.gender,\r\n                newData.citizenship,\r\n                newData.address,\r\n                newData.postalcode,\r\n                newData.country\r\n              );\r\n              resolve();\r\n            }, 1000);\r\n          }),\r\n        onRowDelete: (oldData) =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              const dataDelete = [...data];\r\n              const index = oldData.tableData.id;\r\n              deleteusers(oldData.user_id);\r\n              dataDelete.splice(index, 1);\r\n              setData([...dataDelete]);\r\n              resolve();\r\n            }, 1000);\r\n          }),\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Users;\r\n","D:\\Github\\1\\FYP-test\\client\\src\\Pages\\User\\User.js",[],[],"D:\\Github\\1\\FYP-test\\client\\src\\Pages\\Opportunities\\Opportunities.js",["252"],[],"import React, { useState, useEffect } from \"react\";\r\nimport TableIcons from \"../../Components/MaterialTablesIcons/TablesIcons\";\r\nimport MaterialTable from \"material-table\";\r\nimport Axios from \"axios\";\r\n\r\nfunction Opportunities() {\r\n  const [data, setData] = useState([]);\r\n  const [reload, setReload] = useState(false);\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3001/admin_get_opp\").then((response) => {\r\n      setData(response.data);\r\n    });\r\n  }, []);\r\n\r\n  const updateopp = (\r\n    opp_id,\r\n    name,\r\n    position_level,\r\n    salary,\r\n    job_scope,\r\n    description,\r\n    additional_requirements\r\n  ) => {\r\n    Axios.put(\"http://localhost:3001/admin_update_opp\", {\r\n      opp_id: opp_id,\r\n      name: name,\r\n      position_level: position_level,\r\n      salary: salary,\r\n      job_scope: job_scope,\r\n      description: description,\r\n      additional_requirements: additional_requirements,\r\n    }).then((response) => {\r\n      alert(\"Updated\");\r\n      setReload(!reload);\r\n    });\r\n  };\r\n  const deleteopp = (opp_id) => {\r\n    Axios.put(\"http://localhost:3001/admin_delete_opp\", {\r\n      opp_id: opp_id,\r\n    }).then((response) => {\r\n      alert(\"Deleted\");\r\n      setReload(!reload);\r\n    });\r\n  };\r\n\r\n  const [columns, setColumns] = useState([\r\n    { title: \"Job Name\", field: \"name\" },\r\n    {\r\n      title: \"Company\",\r\n      field: \"company_name\",\r\n    },\r\n    {\r\n      title: \"Position\",\r\n      field: \"position_level\",\r\n    },\r\n    {\r\n      title: \"Salary\",\r\n      field: \"salary\",\r\n    },\r\n    {\r\n      title: \"Job Scope\",\r\n      field: \"job_scope\",\r\n    },\r\n    {\r\n      title: \"Job description\",\r\n      field: \"description\",\r\n    },\r\n\r\n    {\r\n      title: \"Additional Requirements\",\r\n      field: \"additional_requirements\",\r\n    },\r\n  ]);\r\n  return (\r\n    <MaterialTable\r\n      icons={TableIcons}\r\n      title=\" Manage Opportunities\"\r\n      columns={columns}\r\n      data={data}\r\n      options={{\r\n        filtering: true,\r\n      }}\r\n      editable={{\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              const dataUpdate = [...data];\r\n              const index = oldData.tableData.id;\r\n              dataUpdate[index] = newData;\r\n\r\n              setData([...dataUpdate]);\r\n              updateopp(\r\n                newData.opp_id,\r\n                newData.name,\r\n                newData.position_level,\r\n                newData.salary,\r\n                newData.job_scope,\r\n                newData.description,\r\n                newData.additional_requirements\r\n              );\r\n              resolve();\r\n            }, 1000);\r\n          }),\r\n        onRowDelete: (oldData) =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              const dataDelete = [...data];\r\n              const index = oldData.tableData.id;\r\n              deleteopp(oldData.opp_id);\r\n              dataDelete.splice(index, 1);\r\n              setData([...dataDelete]);\r\n              resolve();\r\n            }, 1000);\r\n          }),\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Opportunities;\r\n","D:\\Github\\1\\FYP-test\\client\\src\\Pages\\Reviews\\reviews.js",["253"],[],"import React, { useState, useEffect } from \"react\";\r\nimport TableIcons from \"../../Components/MaterialTablesIcons/TablesIcons\";\r\nimport MaterialTable from \"material-table\";\r\nimport Axios from \"axios\";\r\nfunction Reviews() {\r\n  const [data, setData] = useState([]);\r\n  const [reload, setReload] = useState(false);\r\n\r\n  const updatereviews = (review_id, review, rating) => {\r\n    Axios.put(\"http://localhost:3001/admin_update_reviews\", {\r\n      review_id: review_id,\r\n      review: review,\r\n      rating: rating,\r\n    }).then((response) => {\r\n      alert(\"Updated\");\r\n      setReload(!reload);\r\n    });\r\n  };\r\n\r\n  const deletereview = (review_id) => {\r\n    Axios.put(\"http://localhost:3001/admin_delete_review\", {\r\n      review_id: review_id,\r\n    }).then((response) => {\r\n      alert(\"Deleted\");\r\n      setReload(!reload);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3001/admin_get_reviews\").then((response) => {\r\n      setData(response.data);\r\n    });\r\n  }, [reload]);\r\n\r\n  const [columns, setColumns] = useState([\r\n    { title: \"Reviews\", field: \"review\" },\r\n    {\r\n      title: \"Rating\",\r\n      field: \"rating\",\r\n    },\r\n    {\r\n      title: \"User name\",\r\n      field: \"full_name\",\r\n    },\r\n    {\r\n      title: \"Company\",\r\n      field: \"company_name\",\r\n    },\r\n  ]);\r\n\r\n  return (\r\n    <MaterialTable\r\n      icons={TableIcons}\r\n      title=\" Manage Reviews\"\r\n      columns={columns}\r\n      data={data}\r\n      options={{\r\n        filtering: true,\r\n      }}\r\n      editable={{\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              const dataUpdate = [...data];\r\n              const index = oldData.tableData.id;\r\n              dataUpdate[index] = newData;\r\n\r\n              setData([...dataUpdate]);\r\n              updatereviews(newData.review_id, newData.review, newData.rating);\r\n              resolve();\r\n            }, 1000);\r\n          }),\r\n        onRowDelete: (oldData) =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              const dataDelete = [...data];\r\n              const index = oldData.tableData.id;\r\n              deletereview(oldData.review_id);\r\n              dataDelete.splice(index, 1);\r\n              setData([...dataDelete]);\r\n              resolve();\r\n            }, 1000);\r\n          }),\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Reviews;\r\n","D:\\Github\\1\\FYP-test\\client\\src\\Pages\\Stats\\Stats.js",["254","255"],[],"import React, { useState, useEffect } from \"react\";\r\nimport LineChart from \"../../Components/LineChart\";\r\nimport { UserData } from \"../../Data/Data\";\r\n\r\nfunction App() {\r\n  const [userData, setUserData] = useState({\r\n    labels: UserData.map((data) => data.year),\r\n    datasets: [\r\n      {\r\n        label: \"Users Gained\",\r\n        data: UserData.map((data) => data.userGain),\r\n        backgroundColor: [\r\n          \"rgba(75,192,192,1)\",\r\n          \"#ecf0f1\",\r\n          \"#50AF95\",\r\n          \"#f3ba2f\",\r\n          \"#2a71d0\",\r\n        ],\r\n        borderColor: \"black\",\r\n        borderWidth: 2,\r\n      },\r\n    ],\r\n  });\r\n\r\n  // IF YOU SEE THIS COMMENT: I HAVE GOOD EYESIGHT\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div style={{ width: 700 }}>\r\n        <LineChart chartData={userData} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\Github\\1\\FYP-test\\client\\src\\Partner\\PartnerHome.js",["256","257","258","259","260"],[],"import React, { useEffect, useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './PartnerHome.css';\r\nimport { BiListUl, BiBarChartAlt2, BiSearchAlt, BiUser } from \"react-icons/bi\";\r\nimport { IoWarning } from \"react-icons/io5\";\r\nimport { ImExit } from \"react-icons/im\";\r\nimport { Alert } from 'react-bootstrap';\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\n\r\n\r\nfunction PartnerHome() {\r\n\r\n    const Uid = localStorage.getItem(\"user_id\");\r\n    const token = localStorage.getItem(\"token\");\r\n    const [AlertMSG, SetAlertMSG] = useState(\"\");\r\n    const [AlertMSGStatus, SetAlertMSGStatus] = useState(false);\r\n    const nav = useNavigate();\r\n\r\n    const logout = () => {\r\n        sessionStorage.clear();\r\n        localStorage.clear()\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (Uid == \"\" || token == \"\" || Uid == undefined || token == undefined) {\r\n            nav(\"../Login/PartnerLogin\")\r\n            window.location.reload();\r\n        } else {\r\n            Axios.post(\"http://localhost:3001/CheckPartnerCompleted\", {\r\n                user_id: Uid\r\n            }).then((response) => {\r\n                if (response.data.message) {\r\n                    SetAlertMSG(response.data.message)\r\n                    SetAlertMSGStatus(true)\r\n                }\r\n            })\r\n        }\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"RegisterHome\">\r\n\r\n            {AlertMSGStatus && <Alert variant=\"warning\" >\r\n                <b><IoWarning />Warning!: Profile Verification</b>\r\n                <br></br>\r\n                <p className=\"text_alertmsg\">{AlertMSG} To complete your profile <a href='../Partner/PartnerProfile'>Click Here</a></p></Alert>}\r\n\r\n\r\n            <div className='panel'>\r\n                <div className='panel-body'>\r\n                    <h1>Welcome to the Recruitment Centre</h1>\r\n                    <div className='stuff_todo'>\r\n                        <div className='row_item'>\r\n                            <div class=\"col-sm-12 col-md-6 col-lg-5\">\r\n                                <h3>Select an option</h3>\r\n                            </div>\r\n                            <div className='pages_options'>\r\n                                <div className='pages_icons'>\r\n\r\n                                    <div className='icon'>\r\n\r\n\r\n                                        <Link to=\"../Partner/PartnerJobAd\" style={{ padding: 10 }}>\r\n                                            <button type=\"button\">\r\n                                                <div className=\"image_icon\">\r\n                                                    <BiListUl />\r\n                                                </div>\r\n                                                <p>Job Ad</p>\r\n                                            </button>\r\n                                        </Link>\r\n\r\n\r\n                                        <Link to=\"../Partner/PartnerUserSearch\" style={{ padding: 10 }}>\r\n                                            <button type=\"button\">\r\n                                                <div className=\"image_icon\">\r\n                                                    <BiSearchAlt />\r\n                                                </div>\r\n                                                <p>Applicants</p>\r\n                                            </button>\r\n                                        </Link>\r\n\r\n\r\n\r\n                                        <Link to=\"../Partner/PartnerStats\" style={{ padding: 10 }}>\r\n                                            <button type=\"button\">\r\n                                                <div className=\"image_icon\">\r\n                                                    <BiBarChartAlt2 />\r\n                                                </div>\r\n                                                <p>Statics</p>\r\n                                            </button>\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className='Profile_Edit'>\r\n                                <div className='icon'>\r\n                                    <Link to=\"../Partner/PartnerProfile\" style={{ padding: 10, }}>\r\n                                        <button type=\"button\">\r\n                                            <div className=\"image_icon\">\r\n                                                <BiUser />\r\n                                            </div>\r\n                                            <p>Profile</p>\r\n                                        </button>\r\n                                    </Link>\r\n\r\n                                    <Link to=\"../\" style={{ padding: 10, }}>\r\n                                        <button type=\"button\" onClick={logout}>\r\n                                            <div className=\"image_icon\">\r\n                                                <ImExit />\r\n                                            </div>\r\n                                            <p>Log out</p>\r\n                                        </button>\r\n                                    </Link>\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PartnerHome;","D:\\Github\\1\\FYP-test\\client\\src\\Partner\\DeleteConfirmation.js",[],[],"D:\\Github\\1\\FYP-test\\client\\src\\Register\\YouthForm.js",["261"],[],"import React, { Component } from 'react';\r\nimport YouthDetails1 from './YouthDetails1';\r\nimport YouthDetails2 from './YouthDetails2';\r\nimport YouthDetails3 from './YouthDetails3';\r\nimport Confirmation from './Confirmation';\r\n\r\nclass YouthForm extends Component {\r\n\r\n    state = {\r\n        step: 1,\r\n        email: '',\r\n        fullname: '', \r\n        password: '',\r\n        dob: '',\r\n        gender: '',\r\n        num: '',\r\n        levelOfEducation: '',\r\n        citizenship: '',\r\n        address: '',\r\n        country: '',\r\n        postalcode:''\r\n    }\r\n\r\n    nextStep = () => {\r\n        const { step } = this.state\r\n        this.setState({\r\n            step : step + 1\r\n        })\r\n    }\r\n\r\n    prevStep = () => {\r\n        const { step } = this.state\r\n        this.setState({\r\n            step : step - 1\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    }\r\n\r\n    render(){\r\n        const {step, email, fullname, password, dob, gender, num, levelOfEducation, citizenship, address, country, postalcode} = this.state;\r\n        const inputValues = {  email, fullname, password, dob, gender, num, levelOfEducation, citizenship, address, country, postalcode };\r\n    \r\n        switch(step) {\r\n            case 1:\r\n                return <YouthDetails1\r\n                        nextStep={this.nextStep}\r\n                        handleChange = {this.handleChange}\r\n                        inputValues={inputValues}\r\n                        />\r\n            case 2:\r\n                return <YouthDetails2\r\n                        nextStep={this.nextStep}\r\n                        prevStep={this.prevStep}\r\n                        handleChange = {this.handleChange}\r\n                        inputValues={inputValues}\r\n                        />\r\n            case 3:\r\n                return <YouthDetails3\r\n                        nextStep={this.nextStep}\r\n                        prevStep={this.prevStep}\r\n                        handleChange = {this.handleChange}\r\n                        inputValues={inputValues}\r\n                        />            \r\n            case 4:\r\n                return <Confirmation\r\n                        nextStep={this.nextStep}\r\n                        prevStep={this.prevStep}\r\n                        inputValues={inputValues}\r\n                        />\r\n            }\r\n    \r\n    \r\n    }\r\n}\r\n\r\nexport default YouthForm;","D:\\Github\\1\\FYP-test\\client\\src\\Components\\LineChart.js",[],[],"D:\\Github\\1\\FYP-test\\client\\src\\Data\\Data.js",[],[],"D:\\Github\\1\\FYP-test\\client\\src\\Components\\MaterialTablesIcons\\TablesIcons.js",[],[],"D:\\Github\\1\\FYP-test\\client\\src\\Register\\YouthDetails3.js",[],[],"D:\\Github\\1\\FYP-test\\client\\src\\Register\\Confirmation.js",[],[],"D:\\Github\\1\\FYP-test\\client\\src\\Register\\YouthDetails1.js",[],[],"D:\\Github\\1\\FYP-test\\client\\src\\Register\\YouthDetails2.js",[],[],{"ruleId":"262","severity":1,"message":"263","line":7,"column":27,"nodeType":"264","messageId":"265","endLine":7,"endColumn":33},{"ruleId":"262","severity":1,"message":"266","line":18,"column":8,"nodeType":"264","messageId":"265","endLine":18,"endColumn":20},{"ruleId":"262","severity":1,"message":"263","line":4,"column":27,"nodeType":"264","messageId":"265","endLine":4,"endColumn":33},{"ruleId":"262","severity":1,"message":"267","line":4,"column":34,"nodeType":"264","messageId":"265","endLine":4,"endColumn":40},{"ruleId":"262","severity":1,"message":"268","line":4,"column":42,"nodeType":"264","messageId":"265","endLine":4,"endColumn":47},{"ruleId":"269","severity":1,"message":"270","line":38,"column":4,"nodeType":"271","endLine":38,"endColumn":6,"suggestions":"272"},{"ruleId":"273","severity":1,"message":"274","line":90,"column":40,"nodeType":"275","messageId":"276","endLine":90,"endColumn":42},{"ruleId":"273","severity":1,"message":"274","line":78,"column":40,"nodeType":"275","messageId":"276","endLine":78,"endColumn":42},{"ruleId":"273","severity":1,"message":"274","line":30,"column":16,"nodeType":"275","messageId":"276","endLine":30,"endColumn":18},{"ruleId":"273","severity":1,"message":"274","line":30,"column":31,"nodeType":"275","messageId":"276","endLine":30,"endColumn":33},{"ruleId":"273","severity":1,"message":"274","line":30,"column":43,"nodeType":"275","messageId":"276","endLine":30,"endColumn":45},{"ruleId":"273","severity":1,"message":"274","line":30,"column":65,"nodeType":"275","messageId":"276","endLine":30,"endColumn":67},{"ruleId":"273","severity":1,"message":"274","line":33,"column":28,"nodeType":"275","messageId":"276","endLine":33,"endColumn":30},{"ruleId":"269","severity":1,"message":"277","line":47,"column":8,"nodeType":"271","endLine":47,"endColumn":10,"suggestions":"278"},{"ruleId":"262","severity":1,"message":"279","line":18,"column":12,"nodeType":"264","messageId":"265","endLine":18,"endColumn":22},{"ruleId":"262","severity":1,"message":"280","line":19,"column":12,"nodeType":"264","messageId":"265","endLine":19,"endColumn":20},{"ruleId":"262","severity":1,"message":"281","line":24,"column":12,"nodeType":"264","messageId":"265","endLine":24,"endColumn":21},{"ruleId":"262","severity":1,"message":"282","line":24,"column":23,"nodeType":"264","messageId":"265","endLine":24,"endColumn":35},{"ruleId":"273","severity":1,"message":"274","line":47,"column":16,"nodeType":"275","messageId":"276","endLine":47,"endColumn":18},{"ruleId":"273","severity":1,"message":"274","line":47,"column":31,"nodeType":"275","messageId":"276","endLine":47,"endColumn":33},{"ruleId":"273","severity":1,"message":"274","line":47,"column":43,"nodeType":"275","messageId":"276","endLine":47,"endColumn":45},{"ruleId":"273","severity":1,"message":"274","line":47,"column":65,"nodeType":"275","messageId":"276","endLine":47,"endColumn":67},{"ruleId":"273","severity":1,"message":"274","line":54,"column":28,"nodeType":"275","messageId":"276","endLine":54,"endColumn":30},{"ruleId":"269","severity":1,"message":"277","line":79,"column":8,"nodeType":"271","endLine":79,"endColumn":10,"suggestions":"283"},{"ruleId":"262","severity":1,"message":"284","line":1,"column":28,"nodeType":"264","messageId":"265","endLine":1,"endColumn":37},{"ruleId":"262","severity":1,"message":"285","line":2,"column":18,"nodeType":"264","messageId":"265","endLine":2,"endColumn":27},{"ruleId":"273","severity":1,"message":"274","line":30,"column":28,"nodeType":"275","messageId":"276","endLine":30,"endColumn":30},{"ruleId":"273","severity":1,"message":"274","line":30,"column":54,"nodeType":"275","messageId":"276","endLine":30,"endColumn":56},{"ruleId":"273","severity":1,"message":"274","line":30,"column":78,"nodeType":"275","messageId":"276","endLine":30,"endColumn":80},{"ruleId":"273","severity":1,"message":"274","line":30,"column":111,"nodeType":"275","messageId":"276","endLine":30,"endColumn":113},{"ruleId":"273","severity":1,"message":"274","line":35,"column":28,"nodeType":"275","messageId":"276","endLine":35,"endColumn":30},{"ruleId":"262","severity":1,"message":"286","line":97,"column":17,"nodeType":"264","messageId":"265","endLine":97,"endColumn":20},{"ruleId":"262","severity":1,"message":"287","line":16,"column":11,"nodeType":"264","messageId":"265","endLine":16,"endColumn":23},{"ruleId":"273","severity":1,"message":"274","line":37,"column":17,"nodeType":"275","messageId":"276","endLine":37,"endColumn":19},{"ruleId":"273","severity":1,"message":"274","line":37,"column":32,"nodeType":"275","messageId":"276","endLine":37,"endColumn":34},{"ruleId":"273","severity":1,"message":"274","line":37,"column":45,"nodeType":"275","messageId":"276","endLine":37,"endColumn":47},{"ruleId":"273","severity":1,"message":"274","line":37,"column":67,"nodeType":"275","messageId":"276","endLine":37,"endColumn":69},{"ruleId":"273","severity":1,"message":"274","line":44,"column":28,"nodeType":"275","messageId":"276","endLine":44,"endColumn":30},{"ruleId":"269","severity":1,"message":"288","line":72,"column":8,"nodeType":"271","endLine":72,"endColumn":10,"suggestions":"289"},{"ruleId":"262","severity":1,"message":"290","line":6,"column":10,"nodeType":"264","messageId":"265","endLine":6,"endColumn":21},{"ruleId":"262","severity":1,"message":"291","line":11,"column":12,"nodeType":"264","messageId":"265","endLine":11,"endColumn":24},{"ruleId":"273","severity":1,"message":"274","line":22,"column":29,"nodeType":"275","messageId":"276","endLine":22,"endColumn":31},{"ruleId":"273","severity":1,"message":"274","line":30,"column":35,"nodeType":"275","messageId":"276","endLine":30,"endColumn":37},{"ruleId":"262","severity":1,"message":"292","line":5,"column":8,"nodeType":"264","messageId":"265","endLine":5,"endColumn":14},{"ruleId":"262","severity":1,"message":"293","line":6,"column":10,"nodeType":"264","messageId":"265","endLine":6,"endColumn":21},{"ruleId":"262","severity":1,"message":"294","line":49,"column":19,"nodeType":"264","messageId":"265","endLine":49,"endColumn":29},{"ruleId":"262","severity":1,"message":"295","line":8,"column":9,"nodeType":"264","messageId":"265","endLine":8,"endColumn":17},{"ruleId":"262","severity":1,"message":"294","line":56,"column":19,"nodeType":"264","messageId":"265","endLine":56,"endColumn":29},{"ruleId":"262","severity":1,"message":"294","line":46,"column":19,"nodeType":"264","messageId":"265","endLine":46,"endColumn":29},{"ruleId":"262","severity":1,"message":"294","line":35,"column":19,"nodeType":"264","messageId":"265","endLine":35,"endColumn":29},{"ruleId":"262","severity":1,"message":"284","line":1,"column":27,"nodeType":"264","messageId":"265","endLine":1,"endColumn":36},{"ruleId":"262","severity":1,"message":"296","line":6,"column":20,"nodeType":"264","messageId":"265","endLine":6,"endColumn":31},{"ruleId":"273","severity":1,"message":"274","line":26,"column":17,"nodeType":"275","messageId":"276","endLine":26,"endColumn":19},{"ruleId":"273","severity":1,"message":"274","line":26,"column":32,"nodeType":"275","messageId":"276","endLine":26,"endColumn":34},{"ruleId":"273","severity":1,"message":"274","line":26,"column":45,"nodeType":"275","messageId":"276","endLine":26,"endColumn":47},{"ruleId":"273","severity":1,"message":"274","line":26,"column":67,"nodeType":"275","messageId":"276","endLine":26,"endColumn":69},{"ruleId":"269","severity":1,"message":"297","line":39,"column":8,"nodeType":"271","endLine":39,"endColumn":10,"suggestions":"298"},{"ruleId":"299","severity":1,"message":"300","line":46,"column":9,"nodeType":"301","messageId":"302","endLine":73,"endColumn":14},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'PartnerStats' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'decoded.Uid', 'decoded.id', and 'nav'. Either include them or remove the dependency array.","ArrayExpression",["303"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'id', 'nav', and 'token'. Either include them or remove the dependency array.",["304"],"'deleteType' is assigned a value but never used.","'deleteID' is assigned a value but never used.","'AllowUser' is assigned a value but never used.","'SetAllowUser' is assigned a value but never used.",["305"],"'useEffect' is defined but never used.","'BiWindows' is defined but never used.","'Uid' is assigned a value but never used.","'changeOpp_id' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Uid', 'nav', 'opp_id', and 'token'. Either include them or remove the dependency array.",["306"],"'decodeToken' is defined but never used.","'validateForm' is defined but never used.","'moment' is defined but never used.","'useNavigate' is defined but never used.","'setColumns' is assigned a value but never used.","'navigate' is assigned a value but never used.","'setUserData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Uid', 'nav', and 'token'. Either include them or remove the dependency array.",["307"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase",{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},{"desc":"310","fix":"312"},{"desc":"313","fix":"314"},{"desc":"315","fix":"316"},"Update the dependencies array to be: [decoded.Uid, decoded.id, nav]",{"range":"317","text":"318"},"Update the dependencies array to be: [id, nav, token]",{"range":"319","text":"320"},{"range":"321","text":"320"},"Update the dependencies array to be: [Uid, nav, opp_id, token]",{"range":"322","text":"323"},"Update the dependencies array to be: [Uid, nav, token]",{"range":"324","text":"325"},[901,903],"[decoded.Uid, decoded.id, nav]",[1490,1492],"[id, nav, token]",[2639,2641],[2932,2934],"[Uid, nav, opp_id, token]",[1352,1354],"[Uid, nav, token]"]