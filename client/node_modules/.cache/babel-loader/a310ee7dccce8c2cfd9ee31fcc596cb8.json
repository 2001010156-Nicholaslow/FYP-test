{"ast":null,"code":"var _jsxFileName = \"D:\\\\Github\\\\1\\\\FYP-test\\\\client\\\\src\\\\Pages\\\\Reviews\\\\reviews.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport TableIcons from \"../../Components/MaterialTablesIcons/TablesIcons\";\nimport MaterialTable from \"material-table\";\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Reviews() {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [reload, setReload] = useState(false);\n\n  const updatereviews = (review_id, review, rating) => {\n    Axios.put(\"http://localhost:3001/admin_update_reviews\", {\n      review_id: review_id,\n      review: review,\n      rating: rating\n    }).then(response => {\n      alert(\"Updated\");\n      setReload(!reload);\n    });\n  };\n\n  const deletereview = review_id => {\n    Axios.put(\"http://localhost:3001/admin_delete_review\", {\n      review_id: review_id\n    }).then(response => {\n      alert(\"Deleted\");\n      setReload(!reload);\n    });\n  };\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/admin_get_reviews\").then(response => {\n      setData(response.data);\n    });\n  }, [reload]);\n  const [columns, setColumns] = useState([{\n    title: \"Reviews\",\n    field: \"review\"\n  }, {\n    title: \"Rating\",\n    field: \"rating\"\n  }, {\n    title: \"User name\",\n    field: \"full_name\"\n  }, {\n    title: \"Company\",\n    field: \"company_name\"\n  }]);\n  return /*#__PURE__*/_jsxDEV(MaterialTable, {\n    icons: TableIcons,\n    title: \" Manage Reviews\",\n    columns: columns,\n    data: data,\n    options: {\n      filtering: true\n    },\n    editable: {\n      onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n        setTimeout(() => {\n          const dataUpdate = [...data];\n          const index = oldData.tableData.id;\n          dataUpdate[index] = newData;\n          setData([...dataUpdate]);\n          updatereviews(newData.review_id, newData.review, newData.rating);\n          resolve();\n        }, 1000);\n      }),\n      onRowDelete: oldData => new Promise((resolve, reject) => {\n        setTimeout(() => {\n          const dataDelete = [...data];\n          const index = oldData.tableData.id;\n          deletereview(oldData.review_id);\n          dataDelete.splice(index, 1);\n          setData([...dataDelete]);\n          resolve();\n        }, 1000);\n      })\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Reviews, \"mfYoeoUYfaOR8j6OTc+BlN6w6XY=\");\n\n_c = Reviews;\nexport default Reviews;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reviews\");","map":{"version":3,"names":["React","useState","useEffect","TableIcons","MaterialTable","Axios","Reviews","data","setData","reload","setReload","updatereviews","review_id","review","rating","put","then","response","alert","deletereview","get","columns","setColumns","title","field","filtering","onRowUpdate","newData","oldData","Promise","resolve","reject","setTimeout","dataUpdate","index","tableData","id","onRowDelete","dataDelete","splice"],"sources":["D:/Github/1/FYP-test/client/src/Pages/Reviews/reviews.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport TableIcons from \"../../Components/MaterialTablesIcons/TablesIcons\";\r\nimport MaterialTable from \"material-table\";\r\nimport Axios from \"axios\";\r\nfunction Reviews() {\r\n  const [data, setData] = useState([]);\r\n  const [reload, setReload] = useState(false);\r\n\r\n  const updatereviews = (review_id, review, rating) => {\r\n    Axios.put(\"http://localhost:3001/admin_update_reviews\", {\r\n      review_id: review_id,\r\n      review: review,\r\n      rating: rating,\r\n    }).then((response) => {\r\n      alert(\"Updated\");\r\n      setReload(!reload);\r\n    });\r\n  };\r\n\r\n  const deletereview = (review_id) => {\r\n    Axios.put(\"http://localhost:3001/admin_delete_review\", {\r\n      review_id: review_id,\r\n    }).then((response) => {\r\n      alert(\"Deleted\");\r\n      setReload(!reload);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3001/admin_get_reviews\").then((response) => {\r\n      setData(response.data);\r\n    });\r\n  }, [reload]);\r\n\r\n  const [columns, setColumns] = useState([\r\n    { title: \"Reviews\", field: \"review\" },\r\n    {\r\n      title: \"Rating\",\r\n      field: \"rating\",\r\n    },\r\n    {\r\n      title: \"User name\",\r\n      field: \"full_name\",\r\n    },\r\n    {\r\n      title: \"Company\",\r\n      field: \"company_name\",\r\n    },\r\n  ]);\r\n\r\n  return (\r\n    <MaterialTable\r\n      icons={TableIcons}\r\n      title=\" Manage Reviews\"\r\n      columns={columns}\r\n      data={data}\r\n      options={{\r\n        filtering: true,\r\n      }}\r\n      editable={{\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              const dataUpdate = [...data];\r\n              const index = oldData.tableData.id;\r\n              dataUpdate[index] = newData;\r\n\r\n              setData([...dataUpdate]);\r\n              updatereviews(newData.review_id, newData.review, newData.rating);\r\n              resolve();\r\n            }, 1000);\r\n          }),\r\n        onRowDelete: (oldData) =>\r\n          new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n              const dataDelete = [...data];\r\n              const index = oldData.tableData.id;\r\n              deletereview(oldData.review_id);\r\n              dataDelete.splice(index, 1);\r\n              setData([...dataDelete]);\r\n              resolve();\r\n            }, 1000);\r\n          }),\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Reviews;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}